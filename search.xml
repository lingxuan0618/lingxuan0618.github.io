<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript,無所畏懼-同步與非同步</title>
      <link href="/posts/69cfb9d7d4ee/"/>
      <url>/posts/69cfb9d7d4ee/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>昨天講了其餘參數跟展開運算子<br>今天要來說明同步與非同步!</p></div><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p><code>執行完一件事情之後，在做下一件事情，意即一次只能做一件事情</code></p><p>今天Joey餐館開幕了!<br>今天一早起床，Joey就開始做很多準備，以下是他要做的事情以及預估需要的時間</p><table><thead><tr><th>事項</th><th>時間</th></tr></thead><tbody><tr><td>醃漬肉品</td><td>1小時</td></tr><tr><td>切菜&#x2F;洗菜</td><td>30分鐘</td></tr><tr><td>把水煮沸準備料理</td><td>20分鐘</td></tr></tbody></table><p>如果是同步的方式，那Joey必須花費<br>醃漬肉品(40分鐘) -&gt; 切菜&#x2F;洗菜(30分鐘) -&gt; 把水煮沸準備料理(20分鐘)<br>總共1小時30分鐘</p><hr><h3 id="非同步"><a href="#非同步" class="headerlink" title="非同步"></a>非同步</h3><p><code>一段時間內可以處理多件事情</code>，但並不是同時進行</p><table><thead><tr><th>事項</th><th>時間</th></tr></thead><tbody><tr><td>醃漬肉品</td><td>40分鐘</td></tr><tr><td>切菜&#x2F;洗菜</td><td>30分鐘</td></tr><tr><td>把水煮沸準備料理</td><td>20分鐘</td></tr></tbody></table><p>如果是透過非同步的方式，Joey可以在醃漬肉品等待的時間，並把火開下去讓水煮沸，接著專心洗菜跟切菜<br>-&gt; 醃漬肉品(40分鐘)<br>-&gt; 切菜&#x2F;洗菜(30分鐘)<br>-&gt; 把水煮沸準備料理(20分鐘)<br>大約40分鐘</p><hr><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>JavaScript本身是<code>單執行緒的語言</code>，所有程式碼都需要依序執行完畢</p><p>但我們平常執行JavaScript是在瀏覽器上，瀏覽器有提供許多Web API讓我們呼叫，JS本身同步的時間線會跟Web API是不同的時間線，所以他們之間可以互相溝通，達到非同步的效果</p></div> <hr><h4 id="回憶過去"><a href="#回憶過去" class="headerlink" title="回憶過去"></a>回憶過去</h4><div class="note green icon-padding simple"><i class="note-icon far fa-grin-squint-tears"></i><p>還記得第一次聽到同步跟非同步的時候，我真的是黑人問號XD<br>想說啥，不是所有東西應該都要同步嗎?為什麼可以非同步，這樣不會有問題嗎?<br>但後來前輩跟我解釋了，使用者使用網頁的時候，如果都用同步的使用者體驗會不好，出現一整片白色或者要等非常非常久，所以才有了非同步的技術(Ajax)，我才漸漸開始對同步跟非同步有初步的了解</p></div> <hr><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://chanchandev.com/js/Async/async-sync-intro/2534378084/">Javascript 非同步 &amp; Event Loop！10 分鐘輕鬆圖解學習！</a><br><a href="https://medium.com/itsems-frontend/javascript-sync-async-22e75e1ca1dc">[JavaScript] 一次搞懂同步與非同步的一切：一次做幾件事情 — 同步(Sync)與非同步(Async)</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的Event Queue</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-其餘參數與展開運算子</title>
      <link href="/posts/739f52684d14/"/>
      <url>/posts/739f52684d14/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>昨天講了函式的閉包<br>今天要來說明其餘參數跟展開運算子!</p></div><h3 id="其餘參數-rest-operator"><a href="#其餘參數-rest-operator" class="headerlink" title="其餘參數(rest operator)"></a>其餘參數(rest operator)</h3><p>如果一個函式可能接受一個以上但不確定數量的參數，可以使用其餘參數加上變數名稱後表示，且只能放在<code>最後一個</code>,其餘參數會將還沒有被定義的參數，蒐集成一個<code>陣列</code>傳入函式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">calculateSalary</span>(<span class="params">name, ...money</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line">  money.<span class="title function_">forEach</span>(<span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">    total += num;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;name&#125;</span>今年的年薪是<span class="subst">$&#123;total&#125;</span>萬元`</span>);</span><br><span class="line">  <span class="comment">// Joey今年的年薪是38萬元</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">calculateSalary</span>(<span class="string">&#x27;Joey&#x27;</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>由上述程式碼中我們可以得知，Joey後面的所有數字，被其餘參數蒐集成一個陣列傳入函式裡面了~</p><hr><h3 id="展開運算子-spread-operator"><a href="#展開運算子-spread-operator" class="headerlink" title="展開運算子(spread operator)"></a>展開運算子(spread operator)</h3><p>假設今天有兩個陣列，要把它合併成一個陣列，我們以往的作法會是使用<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">contact</a>把兩個陣列和在一起</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> rainbowA = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> rainbowB = [<span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;indigo&#x27;</span>, <span class="string">&#x27;violet&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> rainbow = rainbowA.<span class="title function_">concat</span>(rainbowB);</span><br><span class="line"><span class="comment">// [&#x27;red&#x27;, &#x27;orange&#x27;, &#x27;yellow&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;, &#x27;indigo&#x27;, &#x27;violet&#x27;]</span></span><br></pre></td></tr></table></figure><p>ES6之後，我們則可以使用展開運算子，寫出如下程式碼</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> rainbowA = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> rainbowB = [<span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;indigo&#x27;</span>, <span class="string">&#x27;violet&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> rainbow = [...rainbowA, ...rainbowB];</span><br><span class="line"><span class="comment">// [&#x27;red&#x27;, &#x27;orange&#x27;, &#x27;yellow&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;, &#x27;indigo&#x27;, &#x27;violet&#x27;]</span></span><br></pre></td></tr></table></figure><p>ES6之後是不是多了一些很方便的語法呢!</p><hr><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://www.casper.tw/javascript/2017/12/24/javascript-spread-operator/">鐵人賽：JavaScript 展開與其餘</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的同步與非同步!</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-函式的閉包</title>
      <link href="/posts/e481c8bc6759/"/>
      <url>/posts/e481c8bc6759/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天下午跟同事還有同式的前同事打了羽球XD<br>還是運動快樂多ㄌ<br>昨天講了回呼函式<br>今天要來說明函式的閉包!</p></div><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript其餘參數跟展開運算子</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-回呼函式</title>
      <link href="/posts/185dbf0c2f2f/"/>
      <url>/posts/185dbf0c2f2f/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>2023的第一天 昏昏沉沉的 一直想睡覺XD<br>昨天講了箭頭函式<br>今天要來說明回呼函式!</p></div><h3 id="回呼函式-Callback-Function"><a href="#回呼函式-Callback-Function" class="headerlink" title="回呼函式(Callback Function)"></a>回呼函式(Callback Function)</h3><p>指的是<code>函式裡面執行的另外一個函式</code><br>我們看看<a href="https://developer.mozilla.org/en-US/docs/Glossary/Callback_function">MDN-Callback function</a>上的例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Hello</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">`Hello, <span class="subst">$&#123;name&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">processUserInput</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> name = <span class="title function_">prompt</span>(<span class="string">&quot;Please enter your name.&quot;</span>);</span><br><span class="line">  <span class="title function_">callback</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">processUserInput</span>(<span class="title class_">Hello</span>);</span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>回呼函式主要用途是<code>確保某段邏輯能夠在另外一段邏輯之後被執行</code>~<br>雖然一般程式碼都是由上而下一行一行執行，但如果是非同步的行為出現，就不一定能確定執行到結束的時間點，所以如果需要確保某段邏輯能夠在某件事情做完才被執行，就需要用到回呼函式!</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://developer.mozilla.org/en-US/docs/Glossary/Callback_function">MDN-Callback function</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript函式的閉包</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-箭頭函式</title>
      <link href="/posts/61847b0c0cf1/"/>
      <url>/posts/61847b0c0cf1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>終於來到2022年的最後一天XD<br>這一年可以說是亂糟糟，但也好好思考人生的一年<br>願2023年我喜歡的人以及我喜歡的人都能幸福快樂啦!<br>也祝福自己2023可以一切都好<br>昨天講了立即執行函式<br>今天要來說明箭頭函式!</p></div><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>2023的第一天要介紹JavaScript的回呼函式</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-立即執行函式</title>
      <link href="/posts/31eff4d1eef6/"/>
      <url>/posts/31eff4d1eef6/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>終於來到2022年的最後一個工作日，終於結束忙碌的一週…<br>昨天講了函式陳述式及表達式<br>今天要來說明立即執行函式!</p></div><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的箭頭函式</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-函式陳述式及表達式</title>
      <link href="/posts/c8c08c4e4a9a/"/>
      <url>/posts/c8c08c4e4a9a/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天又是整個累到不行ㄉ一天，不過這大概就是遷廠ㄉ樂趣了吧XD<br>昨天講了函式基礎<br>今天要來說明函式陳述式及表達式!</p></div><h3 id="陳述式"><a href="#陳述式" class="headerlink" title="陳述式"></a>陳述式</h3><p>常見的陳述式有</p><ul><li>if&#x2F;switch判斷式</li><li>for &#x2F; while迴圈</li><li>變數宣告</li><li>一般函式宣告</li></ul><h3 id="表達式"><a href="#表達式" class="headerlink" title="表達式"></a>表達式</h3><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://www.casper.tw/development/2020/09/17/js-expression/">JavaScript 表達式觀念及運用 - JS Expression</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的立即執行函式</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-函式基礎</title>
      <link href="/posts/43aa44ca82f5/"/>
      <url>/posts/43aa44ca82f5/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>昨天講了提升現象(Hoisting)<br>好複雜嘎~~<br>今天要來說明函式基礎!</p></div><h3 id="函式的宣告"><a href="#函式的宣告" class="headerlink" title="函式的宣告"></a>函式的宣告</h3><p>最簡單的使用方式是透過<code>function</code>來宣告一個函式，函式在一般情況下跟變數一樣具有名稱，稱為具名函式，如果沒有名稱，則稱為匿名函式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getMoney</span>(<span class="params">money</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> money * <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用function建立一個函式</span></span><br><span class="line"><span class="keyword">function</span> 函式名稱(接收的參數) &#123;</span><br><span class="line">  <span class="comment">//大括號內式函式的範疇</span></span><br><span class="line">  <span class="keyword">return</span> money * <span class="number">1000</span>; <span class="comment">//透過return回傳結果</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函式的執行"><a href="#函式的執行" class="headerlink" title="函式的執行"></a>函式的執行</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getMoney</span>(<span class="number">200</span>);</span><br><span class="line"><span class="comment">//函式名稱(參數);</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>JavaScript會判斷在某個變數後面加上括號，會當成函式來執行，所以括號不能亂加，可能會導致錯誤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> todayWeather = <span class="string">&#x27;Sunny&#x27;</span>;</span><br><span class="line"><span class="title function_">todayWeather</span>();</span><br><span class="line"><span class="comment">// Uncaught TypeError: todayWeather is not a function</span></span><br></pre></td></tr></table></figure></div> <h3 id="函式何時結束"><a href="#函式何時結束" class="headerlink" title="函式何時結束"></a>函式何時結束</h3><p>函式被呼叫後，通常都會從函式內第一航執行到最後一行，但如果有<code>return</code>出現在中間，就會提早結束並回傳return之後的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getMoney</span>(<span class="params">money</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> money * <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// return 之後的任何內容都不會被執行，函式已經在return時，回傳值並結束執行了</span></span><br><span class="line">  money += <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getMoney</span>(<span class="number">2000</span>); <span class="comment">// 2000000</span></span><br></pre></td></tr></table></figure><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的函式陳述式及表達式</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-提升現象</title>
      <link href="/posts/0ec0279a2e91/"/>
      <url>/posts/0ec0279a2e91/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天是這一季最後一次羽球社團的活動XD<br>昨天講了作用域鍊<br>今天要來說明提升現象(Hoisting)!</p></div><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的函式基礎</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-作用域鍊</title>
      <link href="/posts/e7c77769b017/"/>
      <url>/posts/e7c77769b017/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天為了新廠的網路到處奔波…還好網路的廠商人滿好的，跟我分享很多一些網路線的相關知識<br>昨天介紹了作用域，今天要來說明作用域鍊!</p></div><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的提升現象</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-作用域</title>
      <link href="/posts/9f25161904cb/"/>
      <url>/posts/9f25161904cb/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-candy-cane"></i><p>聖誕快樂樂~ 今天的太陽很舒服呢(&#x3D;´ω&#96;&#x3D;)<br>今天要來說明作用域呦~</p></div><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>又稱為範疇(Scope)，代表變數可以被使用的範圍<br>來看看以下這段程式碼</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> globalVariable = <span class="string">&#x27;globalVariable&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">local</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> localVariable = <span class="string">&#x27;local&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalVariable); <span class="comment">// &#x27;globalVariable&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(localVariable); <span class="comment">// localVariable is not defined</span></span><br></pre></td></tr></table></figure><p>因為local這個函式並沒有被呼叫，所以也沒有產生執行環境，因此對全域環境來說，localVariable是不存在的，代表localVariable的範疇只限於local函式內。</p><h4 id="函式範疇-Function-Scope"><a href="#函式範疇-Function-Scope" class="headerlink" title="函式範疇(Function Scope)"></a>函式範疇(Function Scope)</h4><p>可以想成<code>在Function內的Scope</code><br>如果需要在全域環境下使用函式內的變數，必須呼叫函式讓其產生執行環境，但結束這個函式之後，裡面所宣告的變數就無法取用了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> globalVariable = <span class="string">&#x27;globalVariable&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">local</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// localVariable 只在函式被呼叫，產生執行環境時能被取用</span></span><br><span class="line">  <span class="comment">// 開始</span></span><br><span class="line">  <span class="keyword">var</span> localVariable = <span class="string">&#x27;local&#x27;</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(localVariable);  <span class="comment">// &#x27;local&#x27;</span></span><br><span class="line">  <span class="comment">// 結束</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">local</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalVariable); <span class="comment">// &#x27;globalVariable&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(localVariable); <span class="comment">// localVariable is not defined</span></span><br></pre></td></tr></table></figure><h4 id="區塊範疇-Block-Scope"><a href="#區塊範疇-Block-Scope" class="headerlink" title="區塊範疇(Block Scope)"></a>區塊範疇(Block Scope)</h4><p><code>利用區塊的大括號去定義範疇</code></p><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>區塊是什麼?<br>區塊就是兩個大括號<code>{</code>、<code>}</code>裡面的範圍，if判斷式、while、for迴圈、函式的大括號都算是</p></div> <div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>ES6之後的<code>const</code>以及<code>let</code>宣告變數的關鍵字，它們宣告的範疇會以區塊來定義</p></div> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> globalVariable = <span class="string">&#x27;globalVariable&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> localVariable = <span class="string">&#x27;local&#x27;</span>;</span><br><span class="line">    <span class="comment">//使用let或者const它們定義的範疇會在區塊內，所以if&#123;&#125;區塊外並無法讀取到localVariable</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(globalVariable); <span class="comment">// &#x27;globalVariable&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(localVariable); <span class="comment">// localVariable is not defined</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>因為使用區塊範疇能避免重複宣告變數導致的混淆，所以在ES6規範出現後，<code>const</code>以及<code>let</code>在實際開發時更常被拿來使用!</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的作用域鍊</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-執行環境堆疊</title>
      <link href="/posts/eebb98edc4ca/"/>
      <url>/posts/eebb98edc4ca/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天是平安夜 一年又要過去了&gt;&lt;<br>昨天講完了JS的執行環境<br>今天要來說明執行環境堆疊</p></div><h3 id="執行堆疊-Execution-stack"><a href="#執行堆疊-Execution-stack" class="headerlink" title="執行堆疊(Execution stack)"></a>執行堆疊(Execution stack)</h3><p>JavaScript是<code>單執行緒</code>,一次只能做一件事情，一旦執行環境開始堆疊，會從最頂端的執行環境開始處理<br>直到最頂端的事情完成(return)後，此執行環境就會消失，下一個在頂端的執行環境會繼續被處理，就這樣一直持續直到所有執行環境都消失為止</p><h4 id="執行堆疊流程圖"><a href="#執行堆疊流程圖" class="headerlink" title="執行堆疊流程圖"></a>執行堆疊流程圖</h4><p><img src="https://imgur.com/TYQwQpB.png" alt="flow"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;請到最裡面的房間將打開大門的鑰匙取出&#x27;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">firstRoom</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;請前往第二個房間&#x27;</span>);</span><br><span class="line">  <span class="title function_">secondRoom</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;恭喜你使用鑰匙打開了大門!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">secondRoom</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;請前往第三個房間&#x27;</span>);</span><br><span class="line">  <span class="title function_">thirdRoom</span>();</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;請回去第一個房間&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">thirdRoom</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;恭喜獲得鑰匙，請回去第二個房間&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">firstRoom</span>();</span><br></pre></td></tr></table></figure><h4 id="console的結果"><a href="#console的結果" class="headerlink" title="console的結果"></a>console的結果</h4><p><img src="https://imgur.com/hW4RaYK.png" alt="mission"></p><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://medium.com/%E9%AD%94%E9%AC%BC%E8%97%8F%E5%9C%A8%E7%A8%8B%E5%BC%8F%E7%B4%B0%E7%AF%80%E8%A3%A1/%E6%B7%BA%E8%AB%87-javascript-%E5%9F%B7%E8%A1%8C%E7%92%B0%E5%A2%83-2976b3eaf248">秒懂！JavaSript 執行環境與堆疊</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的作用域(ง๑ •̀_•́)ง</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-執行環境</title>
      <link href="/posts/052b19cc24b3/"/>
      <url>/posts/052b19cc24b3/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>夥伴今天確診了QQ<br>希望關關難過關關過囉!<br>昨天講完了條件判斷跟迴圈<br>今天要來記錄執行環境!</p></div><h3 id="執行環境"><a href="#執行環境" class="headerlink" title="執行環境"></a>執行環境</h3><p>任何JS程式碼被執行、讀取的地方，Ex:函式</p><ul><li>全域執行環境(Global Execution Context)</li><li>函式執行環境(Functional Execution Context)</li><li>eval函式內的執行環境</li></ul><hr><h4 id="全域執行環境-Global-Execution-Context"><a href="#全域執行環境-Global-Execution-Context" class="headerlink" title="全域執行環境(Global Execution Context)"></a>全域執行環境(Global Execution Context)</h4><p>-JavaScript 預設的執行環境，當JavaScript檔案被載入時，第一個進入的執行環境就是全域執行環境<br>全域執行環境內，執行環境會做幾件事情</p><ol><li>創建全域環境(全域物件)(以web來說就是建立一個Window)</li><li>創建一個<code>this</code>變數，並將其指向全域物件，可以在開發者工具打上this，會看見有一個全域物件Window<br><img src="https://imgur.com/9dNiHl4.png" alt="this"></li></ol><hr><h4 id="函式執行環境-Functional-Execution-Context"><a href="#函式執行環境-Functional-Execution-Context" class="headerlink" title="函式執行環境(Functional Execution Context)"></a>函式執行環境(Functional Execution Context)</h4><p>每個函式都有屬於自己的執行環境，當函式被呼叫的時候會產生，所以有多少個函式就會有多少個執行環境</p><ol><li>創建一個 <code>arguments object</code> 參數物件</li><li>創建一個<code>this</code>變數</li></ol><hr><h4 id="eval函式內的執行環境"><a href="#eval函式內的執行環境" class="headerlink" title="eval函式內的執行環境"></a>eval函式內的執行環境</h4><p>eval是JavaScript提供的一個預設方法，在eval函式內可以透過字串的方式去執行JavaScript程式碼，但現在eval函式不常被使用也不推薦使用<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval">MDN-eval()</a><br><a href="https://dev.to/amitkhonde/eval-is-evil-why-we-should-not-use-eval-in-javascript-1lbh">Eval is evil - Why we should not use eval in JavaScript</a></p><hr><h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval">MDN-eval()</a><br><a href="https://dev.to/amitkhonde/eval-is-evil-why-we-should-not-use-eval-in-javascript-1lbh">Eval is evil - Why we should not use eval in JavaScript</a><br><a href="https://ithelp.ithome.com.tw/articles/10258787">JavaScript的執行階段: Execution Context</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的執行環境堆疊Σ(ﾟωﾟ)</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-流程判斷與迴圈</title>
      <link href="/posts/2610b42d9791/"/>
      <url>/posts/2610b42d9791/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天好冷阿 昨天突然說要遷廠了 各種忙整理跟處理( ˘•ω•˘ )<br>昨天了解了運算子跟運算元<br>今天要來說明條件判斷跟迴圈!</p></div><h3 id="流程判斷"><a href="#流程判斷" class="headerlink" title="流程判斷"></a>流程判斷</h3><ul><li>if…else if…else</li><li>switch</li></ul><h4 id="if…else-if…else"><a href="#if…else-if…else" class="headerlink" title="if…else if…else"></a>if…else if…else</h4><p>if最簡單理解就是如果符合這個條件，就跑這段程式碼<br>else則是，非以上這些條件的就會跑else這段的程式碼<br>else if 則是如果有多個條件，會跑符合這段敘述的程式碼<br><code>if...else if...else是由上往下依序去判斷是否有符合條件，所以記得不要寫錯順序囉</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> doSomething = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> todayWeather = <span class="string">&#x27;晴天&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(todayWeather === <span class="string">&#x27;晴天&#x27;</span>) &#123;</span><br><span class="line">  doSomething = <span class="string">&#x27;打球&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(todayWeather === <span class="string">&#x27;陰天&#x27;</span>) &#123;</span><br><span class="line">  doSomething = <span class="string">&#x27;逛街&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  doSomething = <span class="string">&#x27;宅在家&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// doSomething = &#x27;打球&#x27;</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>這邊想要介紹一個<code>三元運算子</code>，第一次看見時，我還霧煞煞呢，後來把它想成if … else就簡單多了!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> doSomething = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> todayWeather = <span class="string">&#x27;晴天&#x27;</span>;</span><br><span class="line"></span><br><span class="line">doSomething = todayWeather === <span class="string">&#x27;晴天&#x27;</span> ? <span class="string">&#x27;打球&#x27;</span> : <span class="string">&#x27;宅在家&#x27;</span>;</span><br><span class="line"><span class="comment">// 某個對象 = 條件判斷 ? true做的事情 : false 做的事情</span></span><br><span class="line"><span class="comment">// ?想成是if，:想成是else</span></span><br><span class="line"><span class="comment">// doSomething = &#x27;打球&#x27;</span></span><br></pre></td></tr></table></figure></div> <hr><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><p>可以把switch case想成if else<br>只是case完成之後，必須加上break，不然程式碼就會繼續執行下去~</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> doSomething = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> todayWeather = <span class="string">&#x27;晴天&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(todayWeather) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;晴天&#x27;</span>:              <span class="comment">// if(todayWeather = &#x27;晴天&#x27;)</span></span><br><span class="line">    doSomething = <span class="string">&#x27;打球&#x27;</span>;   <span class="comment">// doSomething = &#x27;打球&#x27;;</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;陰天&#x27;</span>:              <span class="comment">// else if(todayWeather = &#x27;陰天&#x27;)</span></span><br><span class="line">    doSomething = <span class="string">&#x27;逛街&#x27;</span>;   <span class="comment">// doSomething = &#x27;逛街&#x27;;</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="attr">default</span>:                  <span class="comment">// else</span></span><br><span class="line">    doSomething = <span class="string">&#x27;宅在家&#x27;</span>; <span class="comment">// doSomething = &#x27;宅在家&#x27;;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// doSomething = &#x27;打球&#x27;</span></span><br></pre></td></tr></table></figure><p>如果今天沒有break，連接了多個case，則會如下顯示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> doSomething = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> todayWeather = <span class="string">&#x27;雨天&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(todayWeather) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;晴天&#x27;</span>:              <span class="comment">// if(todayWeather = &#x27;晴天&#x27;)</span></span><br><span class="line">    doSomething = <span class="string">&#x27;打球&#x27;</span>;   <span class="comment">// doSomething = &#x27;打球&#x27;;</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;陰天&#x27;</span>:              <span class="comment">// else if(todayWeather = &#x27;陰天&#x27; || todayWeather = &#x27;雨天&#x27;)</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">&#x27;雨天&#x27;</span></span><br><span class="line">    doSomething = <span class="string">&#x27;逛街&#x27;</span>;   <span class="comment">// doSomething = &#x27;逛街&#x27;;</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="attr">default</span>:                  <span class="comment">// else</span></span><br><span class="line">    doSomething = <span class="string">&#x27;宅在家&#x27;</span>; <span class="comment">// doSomething = &#x27;宅在家&#x27;;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// doSomething = &#x27;逛街&#x27;</span></span><br></pre></td></tr></table></figure><hr><h3 id="迴圈"><a href="#迴圈" class="headerlink" title="迴圈"></a>迴圈</h3><ul><li>for迴圈</li><li>while迴圈</li></ul><h4 id="for迴圈"><a href="#for迴圈" class="headerlink" title="for迴圈"></a>for迴圈</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ ) &#123;</span><br><span class="line">  <span class="comment">// 迴圈內要執行的程式碼</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// let i = 0;  設定i的初始值為0</span></span><br><span class="line"><span class="comment">// i &lt; 10;     只要初始值i小於10，這個迴圈就要一直持續執行，直到i &gt; 10</span></span><br><span class="line"><span class="comment">// i++;       每一次執行 i 都要 +1</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(宣告某個變數的初始值; 條件判斷; 迴圈結束時要執行的動作;) &#123;</span><br><span class="line">  <span class="comment">// 迴圈內要執行的程式碼</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 宣告某個變數的初始值:    會使用i來代表(陣列中的index)</span></span><br><span class="line"><span class="comment">// 條件判斷:               則會搭配i來做判斷</span></span><br><span class="line"><span class="comment">// 迴圈結束時要執行的動作:  通常會看見i++或者i--，等於每次迴圈，數量都+1或者-1</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>要注意在條件判斷的時候要注意自己的條件，不要寫錯條件導致無窮迴圈</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">2</span>; i &gt; <span class="number">1</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// 迴圈內要執行的程式碼</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因為初始值i永遠大於條件判斷中的1，因為條件永遠成立，<br>會導致迴圈一直執行，就會出現無窮迴圈</p></div> <hr><h4 id="while迴圈"><a href="#while迴圈" class="headerlink" title="while迴圈"></a>while迴圈</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">  <span class="comment">// 迴圈內要執行的程式碼</span></span><br><span class="line">  i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">宣告某個變數的初始值;</span><br><span class="line"><span class="keyword">while</span>(條件判斷) &#123;</span><br><span class="line">  <span class="comment">// 迴圈內要執行的程式碼</span></span><br><span class="line">  迴圈結束時要執行的動作;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>while跟for迴圈一樣要注意在條件判斷的時候要注意自己的條件，不要寫錯條件導致無窮迴圈</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(i &gt; <span class="number">1</span>) &#123;</span><br><span class="line">  <span class="comment">// 迴圈內要執行的程式碼</span></span><br><span class="line">  i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因為初始值i永遠大於條件判斷中的1，因為條件永遠成立，<br>會導致迴圈一直執行，就會出現無窮迴圈</p></div> <hr><h3 id="for迴圈跟while迴圈的使用情境"><a href="#for迴圈跟while迴圈的使用情境" class="headerlink" title="for迴圈跟while迴圈的使用情境"></a>for迴圈跟while迴圈的使用情境</h3><table><thead><tr><th>迴圈</th><th>使用情境</th></tr></thead><tbody><tr><td>for</td><td>大多用在 <font color="#49B1F5"> 明確知道</font>迴圈執行次數之時，因為for迴圈包含<code>初始值、條件以及結束迴圈時的變動</code></td></tr><tr><td>while</td><td>大多用在 <font color="#49B1F5">不確定</font>迴圈執行次數之時，因為while只包含<code>條件</code></td></tr></tbody></table><hr><h4 id="回憶過去"><a href="#回憶過去" class="headerlink" title="回憶過去"></a>回憶過去</h4><div class="note green icon-padding simple"><i class="note-icon far fa-grin-squint-tears"></i><p>雖然是資管畢業的，但我記得我畢業面試時，<br>跟當時面試的主管說，我其實不太了解迴圈XD<br>還好沒有因此被刷掉，感謝面試官&gt;&lt;<br>我也不知道是進了職場的什麼時候，突然就了解了呢哈哈</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/switch">MDN-switch</a><br><a href="https://www.books.com.tw/products/0010832387">0 陷阱！0 誤解！8 天重新認識 JavaScript！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的執行環境(ﾉ&gt;ω&lt;)ﾉ</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-運算子</title>
      <link href="/posts/c58453f5b694/"/>
      <url>/posts/c58453f5b694/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>昨天介紹在開發環境很好用的console.log()方法<br>今天要來介紹運算子!<br>不過就先介紹我在這段時間比較常用到的運算子<br>其餘的可以看這篇<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators">MDN-運算式與運算子</a></p></div><h3 id="運算子"><a href="#運算子" class="headerlink" title="運算子"></a>運算子</h3><ul><li>賦值運算子</li><li>比較運算子</li><li>算術運算子</li><li>邏輯運算子</li></ul><hr><h4 id="賦值運算子"><a href="#賦值運算子" class="headerlink" title="賦值運算子"></a>賦值運算子</h4><p>基於其右方的運算元的值賦予其左方的運算元。最簡單的賦值運算子是<code>等於(=)</code></p><table><thead><tr><th>名稱</th><th>簡化的運算子</th><th>意義</th></tr></thead><tbody><tr><td>賦值</td><td>x &#x3D; y</td><td>x &#x3D; y</td></tr><tr><td>加法賦值</td><td>x +&#x3D; y</td><td>x &#x3D; x + y</td></tr><tr><td>減法賦值</td><td>x -&#x3D; y</td><td>x &#x3D; x - y</td></tr><tr><td>乘法賦值</td><td>*&#x3D; y</td><td>x &#x3D; x * y</td></tr><tr><td>除法賦值</td><td>x &#x2F;&#x3D; y</td><td>x &#x3D; x &#x2F; y</td></tr><tr><td>餘數賦值</td><td>x %&#x3D; y</td><td>x &#x3D; x % y</td></tr><tr><td>指數賦值</td><td>x **&#x3D; y</td><td>x &#x3D; x ** y</td></tr><tr><td>左移賦值</td><td>x &lt;&lt;&#x3D; y</td><td>x &#x3D; x &lt;&lt; y</td></tr><tr><td>右移賦值</td><td>x &gt;&gt;&#x3D; y</td><td>x &#x3D; x &gt;&gt; y</td></tr><tr><td>無號右移賦值</td><td>x &gt;&gt;&gt;&#x3D; y</td><td>x &#x3D; x &gt;&gt;&gt; y</td></tr><tr><td>位元 AND 賦值</td><td>x &amp;&#x3D; y</td><td>x &#x3D; x &amp; y</td></tr><tr><td>位元 XOR 賦值</td><td>x ^&#x3D; y</td><td>x &#x3D; x ^ y</td></tr><tr><td>位元 OR 賦值</td><td>x |&#x3D; y</td><td>x &#x3D; x | y</td></tr></tbody></table><hr><h4 id="比較運算子"><a href="#比較運算子" class="headerlink" title="比較運算子"></a>比較運算子</h4><p>比較運算子會比較運算元，並基於比較的結果回傳邏輯值(true or false)</p><table><thead><tr><th>運算子</th><th>描述</th><th>會回傳 True 的例子</th></tr></thead><tbody><tr><td>等於(&#x3D;&#x3D;)</td><td>假如運算元<code>相等</code>就回傳 True</td><td>1 &#x3D;&#x3D; ‘1’</td></tr><tr><td>不等於(!&#x3D;)</td><td>假如運算元<code>不相等</code>就回傳 True</td><td>1 !&#x3D; 2</td></tr><tr><td>嚴格等於(&#x3D;&#x3D;&#x3D;)</td><td>假如運算元具有<code>相同型態且相等</code>則回傳 True</td><td>1 &#x3D;&#x3D;&#x3D; 1</td></tr><tr><td>嚴格不等於(!&#x3D;&#x3D;)</td><td>假如運算元具有<code>相同型態但不相等，或是具有不同型態</code>，回傳 True。</td><td>1 !&#x3D;&#x3D; 2</td></tr><tr><td>大於(&gt;)</td><td>假如左方運算元<code>大於</code>右方運算元，回傳 True</td><td>2 &gt; 1</td></tr><tr><td>大於或等於(&gt;&#x3D;)</td><td>假如左方運算元<code>大於或等於</code>右方運算元，回傳 True</td><td>2 &gt;&#x3D; 1</td></tr><tr><td>小於(&lt;)</td><td>假如左方運算元<code>小於</code>右方運算元，回傳 True</td><td>1 &lt; 2</td></tr><tr><td>小於或等於(&lt;&#x3D;)</td><td>假如左方運算元<code>小於或等於</code>右方運算元，回傳 True</td><td>1 &lt;&#x3D; 2</td></tr></tbody></table><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>通常在判斷的時候，都會使用嚴格等於或者嚴格不等於，<br>一般的相同運算子，在兩邊的的型別不一樣時，是會強制轉型成一樣的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> == <span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>但嚴格等於跟嚴格不等於，必須要兩邊的型別相同才會被判斷成true，所以避免開發時，因為沒注意到型別，而導致判斷出問題，建議都使用嚴格等於或者嚴格不等於來進行比較及判斷</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> === <span class="string">&#x27;1&#x27;</span></span><br><span class="line"><span class="comment">// false</span></span><br></pre></td></tr></table></figure></div> <hr><h4 id="算術運算子"><a href="#算術運算子" class="headerlink" title="算術運算子"></a>算術運算子</h4><table><thead><tr><th>運算子</th><th>描述</th><th>範例</th></tr></thead><tbody><tr><td>加法(+)</td><td>回傳兩個運算元<code>相加</code>的結果</td><td>2 + 5 &#x3D; 7</td></tr><tr><td>減法(-)</td><td>回傳兩個運算元<code>相減</code>的結果</td><td>7 - 5 &#x3D; 2</td></tr><tr><td>乘法(*)</td><td>回傳兩個運算元<code>相乘</code>的結果</td><td>7 * 5 &#x3D; 35</td></tr><tr><td>除法(&#x2F;)</td><td>回傳兩個運算元<code>相除</code>的結果</td><td>35 &#x2F; 7 &#x3D; 5</td></tr><tr><td>取餘數(%)</td><td>回傳兩個運算元<code>相除後的餘數</code></td><td>7 % 3 回傳 1 (7 &#x2F; 3 &#x3D; 2…1 餘數是1)</td></tr></tbody></table><h5 id="加法小筆記"><a href="#加法小筆記" class="headerlink" title="加法小筆記"></a>加法小筆記</h5><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p><code>數值與字串相加</code><br>如果一邊是數值，一邊是字串，進行加法時，會將數值轉型成字串，就會變成字串相加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> + <span class="string">&#x27;6&#x27;</span></span><br><span class="line"><span class="comment">// 轉數值為字串</span></span><br><span class="line"><span class="string">&#x27;10&#x27;</span> + <span class="string">&#x27;6&#x27;</span> = <span class="string">&#x27;106&#x27;</span></span><br><span class="line"><span class="comment">// &#x27;106&#x27;</span></span><br></pre></td></tr></table></figure><p><code>數值與undefined相加</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> + <span class="literal">undefined</span></span><br><span class="line"><span class="comment">// 轉型undefined為數值，但轉型失敗會得到NaN</span></span><br><span class="line"><span class="number">10</span> + <span class="title class_">NaN</span> = <span class="title class_">NaN</span></span><br><span class="line"><span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><p><code>數值與物件相加</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> + &#123;&#125;</span><br><span class="line"><span class="comment">// 轉型物件為數值，物件會轉型成字串型別</span></span><br><span class="line"><span class="number">10</span> + <span class="string">&#x27;[object Object]&#x27;</span></span><br><span class="line"><span class="comment">// &#x27;3[object Object]&#x27;</span></span><br></pre></td></tr></table></figure></div><h5 id="減法小筆記"><a href="#減法小筆記" class="headerlink" title="減法小筆記"></a>減法小筆記</h5><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>如果值可以轉型成數值，會被強制轉型做運算</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> - <span class="string">&#x27;6&#x27;</span></span><br><span class="line"><span class="comment">// 轉型字串為數值</span></span><br><span class="line"><span class="number">10</span> - <span class="number">6</span> = <span class="number">4</span></span><br><span class="line"><span class="comment">// 4</span></span><br></pre></td></tr></table></figure><p>如果值可以轉型成數值，會被強制轉型做運算，但如果轉型失敗</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> - <span class="string">&#x27;6a&#x27;</span></span><br><span class="line"><span class="comment">// 轉型字串為數值，但轉型失敗會得到NaN</span></span><br><span class="line"><span class="number">10</span> - <span class="title class_">NaN</span> = <span class="title class_">NaN</span></span><br><span class="line"><span class="comment">// NaN</span></span><br></pre></td></tr></table></figure></div><h5 id="除法小筆記"><a href="#除法小筆記" class="headerlink" title="除法小筆記"></a>除法小筆記</h5><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>如果除數是0，則會是Infinity</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> / <span class="number">0</span> </span><br><span class="line"><span class="comment">// Infinity</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">JS</span>中會用<span class="title class_">Infinity</span>跟-<span class="title class_">Infinity</span>來表示無限大跟負無限大</span><br></pre></td></tr></table></figure></div><hr><h4 id="邏輯運算子"><a href="#邏輯運算子" class="headerlink" title="邏輯運算子"></a>邏輯運算子</h4><p>JS中的&amp;&amp; 和 || 在判斷兩邊數值時，會先判斷左邊的數值，如果已經成立，則不會繼續判斷右邊，所以不會占用任何效能</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(運算式<span class="number">1</span> &amp;&amp; 運算式<span class="number">2</span>);</span><br><span class="line">&amp;&amp;：如果左側可被轉成 <span class="literal">false</span>，即回傳運算式 <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(運算式<span class="number">1</span> || 運算式<span class="number">2</span>);</span><br><span class="line">||：如果左側可被轉成 <span class="literal">true</span>，即回傳運算式 <span class="number">1</span></span><br></pre></td></tr></table></figure><p>使用布林型態做判斷，會回傳布林；但如果非布林型態，則會回非布林型態的值(運算式1或2)</p><table><thead><tr><th>運算子</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>邏輯 AND (&amp;&amp;)</td><td>運算式1 &amp;&amp; 運算式2</td><td>假如運算式1可以被轉換成<code>false的話，回傳運算式1</code>; 否則，回傳運算式2。因此，&amp;&amp;只有在<code>兩個運算元都是True時才會回傳True</code>，否則回傳false。</td></tr><tr><td>邏輯 OR (||)</td><td>運算式1 || 運算式2</td><td>假如運算式1可以被轉換成<code>true的話，回傳運算式1</code>; 否則，回傳運算式2。因此，||在兩個運算元有<code>任一個是True時就會回傳True</code>，否則回傳false。</td></tr><tr><td>邏輯 NOT (!)</td><td>!運算式</td><td>假如單一個運算元能被轉換成 True 時，回傳false ， 不然回傳 true。</td></tr></tbody></table><p>下面是<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators">MDN-運算式與運算子</a>上的範例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &amp;&amp; (邏輯 AND) 運算子</span></span><br><span class="line"><span class="keyword">var</span> a1 =  <span class="literal">true</span> &amp;&amp; <span class="literal">true</span>;     <span class="comment">// t &amp;&amp; t 回傳 true</span></span><br><span class="line"><span class="keyword">var</span> a2 =  <span class="literal">true</span> &amp;&amp; <span class="literal">false</span>;    <span class="comment">// t &amp;&amp; f 回傳 false</span></span><br><span class="line"><span class="keyword">var</span> a3 = <span class="literal">false</span> &amp;&amp; <span class="literal">true</span>;     <span class="comment">// f &amp;&amp; t 回傳 false</span></span><br><span class="line"><span class="keyword">var</span> a4 = <span class="literal">false</span> &amp;&amp; (<span class="number">3</span> == <span class="number">4</span>); <span class="comment">// f &amp;&amp; f 回傳 false</span></span><br><span class="line"><span class="keyword">var</span> a5 = <span class="string">&quot;Cat&quot;</span> &amp;&amp; <span class="string">&quot;Dog&quot;</span>;    <span class="comment">// t &amp;&amp; t 回傳 Dog</span></span><br><span class="line"><span class="keyword">var</span> a6 = <span class="literal">false</span> &amp;&amp; <span class="string">&quot;Cat&quot;</span>;    <span class="comment">// f &amp;&amp; t 回傳 false</span></span><br><span class="line"><span class="keyword">var</span> a7 = <span class="string">&quot;Cat&quot;</span> &amp;&amp; <span class="literal">false</span>;    <span class="comment">// t &amp;&amp; f 回傳 false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// || (邏輯 OR) 運算子</span></span><br><span class="line"><span class="keyword">var</span> o1 =  <span class="literal">true</span> || <span class="literal">true</span>;     <span class="comment">// t || t 回傳 true</span></span><br><span class="line"><span class="keyword">var</span> o2 = <span class="literal">false</span> || <span class="literal">true</span>;     <span class="comment">// f || t 回傳 true</span></span><br><span class="line"><span class="keyword">var</span> o3 =  <span class="literal">true</span> || <span class="literal">false</span>;    <span class="comment">// t || f 回傳 true</span></span><br><span class="line"><span class="keyword">var</span> o4 = <span class="literal">false</span> || (<span class="number">3</span> == <span class="number">4</span>); <span class="comment">// f || f 回傳 false</span></span><br><span class="line"><span class="keyword">var</span> o5 = <span class="string">&#x27;Cat&#x27;</span> || <span class="string">&#x27;Dog&#x27;</span>;    <span class="comment">// t || t 回傳 Cat</span></span><br><span class="line"><span class="keyword">var</span> o6 = <span class="literal">false</span> || <span class="string">&#x27;Cat&#x27;</span>;    <span class="comment">// f || t 回傳 Cat</span></span><br><span class="line"><span class="keyword">var</span> o7 = <span class="string">&#x27;Cat&#x27;</span> || <span class="literal">false</span>;    <span class="comment">// t || f 回傳 Cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ! (邏輯 NOT)</span></span><br><span class="line"><span class="keyword">var</span> n1 = !<span class="literal">true</span>;  <span class="comment">// !t 回傳 false</span></span><br><span class="line"><span class="keyword">var</span> n2 = !<span class="literal">false</span>; <span class="comment">// !f 回傳 true</span></span><br><span class="line"><span class="keyword">var</span> n3 = !<span class="string">&#x27;Cat&#x27;</span>; <span class="comment">// !t 回傳 false</span></span><br></pre></td></tr></table></figure><hr><h4 id="回憶過去"><a href="#回憶過去" class="headerlink" title="回憶過去"></a>回憶過去</h4><div class="note green icon-padding simple"><i class="note-icon far fa-grin-squint-tears"></i><p>還記得之前都被&amp;&amp; || 搞得暈頭轉向<br>有時候不小心有多條件的時候還會會錯意XD<br>不過也是因為邏輯運算子有的特性啦</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Guide/Expressions_and_Operators">MDN-運算式與運算子</a><br><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的條件判斷ヽ(●´∀&#96;●)ﾉ</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-console.log()</title>
      <link href="/posts/90d1fc690d88/"/>
      <url>/posts/90d1fc690d88/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>今天下班跟同事去打了羽球XD<br>這一季的倒數第二次<br>不過有同事換揪星期六下午打哈哈到時候再++</p><p>今天要來分享可以在瀏覽器的Console區塊把結果或者值印出來查看的console.log()方法!</p></div><h3 id="console-log"><a href="#console-log" class="headerlink" title="console.log()"></a>console.log()</h3><p>平常最常見當我們想要印出結果或者值的時候會使用console.log()<br>可以在開發者工具(F12)的console區塊作操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user = <span class="string">&#x27;Joey&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="string">&#x27;24&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> intro = <span class="string">`Hello, my name is <span class="subst">$&#123;user&#125;</span>, I am <span class="subst">$&#123;age&#125;</span> years old`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(intro);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/npjyNWP.png" alt="console.log()"></p><h3 id="Console的其他用法"><a href="#Console的其他用法" class="headerlink" title="Console的其他用法"></a>Console的其他用法</h3><h4 id="console-table"><a href="#console-table" class="headerlink" title="console.table()"></a>console.table()</h4><p>可以用表格格式顯示，比較容易閱讀資料結構</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">table</span>([<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>,<span class="string">&#x27;green&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/mrlKdPB.png" alt="console.table()"></p><hr><h4 id="console-group"><a href="#console-group" class="headerlink" title="console.group()"></a>console.group()</h4><p>使用group跟groupEnd可以把資訊群組起來<br>可以看看<a href="https://developer.mozilla.org/en-US/docs/Web/API/console/group">MDN-console.group()</a>上的例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;This is the outer level&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">group</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Level 2&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">group</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Level 3&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;More of level 3&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Back to level 2&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">groupEnd</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Back to the outer level&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/KmMO6dW.png" alt="console.group()"></p><hr><h4 id="console-time"><a href="#console-time" class="headerlink" title="console.time()"></a>console.time()</h4><p>console.time()以及console.timeEnd()可以用來測量執行程式碼所需的時間</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&#x27;Fetching data&#x27;</span>);</span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://reqres.in/api/users?page=2&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> res.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;Fetching data&#x27;</span>);</span><br><span class="line">    <span class="comment">// Process the data</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/bcYLY6E.png" alt="console.time()"></p><hr><h4 id="console-assert"><a href="#console-assert" class="headerlink" title="console.assert()"></a>console.assert()</h4><p>只要程式碼的結果是false，就會報錯;如果是true，則不會有何顯示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(<span class="string">&#x27;1&#x27;</span> === <span class="number">1</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/alF55iR.png" alt="console.assert()"></p><hr><h4 id="console-trace"><a href="#console-trace" class="headerlink" title="console.trace()"></a>console.trace()</h4><p>console.trace()方法輸出stack trace，用來理解程式碼中的執行流程以及來源</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">footer</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">trace</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">body</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">footer</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">body</span>();</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/kkytilf.png" alt="console.trace()"></p><hr><h4 id="console-dir"><a href="#console-dir" class="headerlink" title="console.dir()"></a>console.dir()</h4><p>以物件顯示出指定對象的所有屬性以及屬性值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> company = &#123;</span><br><span class="line">  <span class="attr">employee</span>: [<span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Joey&#x27;</span>, <span class="string">&#x27;Peter&#x27;</span>],</span><br><span class="line">  <span class="attr">dept</span>: &#123;</span><br><span class="line">    <span class="attr">IT</span>: [<span class="string">&#x27;Joey&#x27;</span>],</span><br><span class="line">    <span class="title class_">Sales</span>: [<span class="string">&#x27;Peter&#x27;</span>, <span class="string">&#x27;John&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">addr</span>: <span class="string">&#x27;Taiwan 305&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(company);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/Lw0wQAO.png" alt="console.dir()"></p><hr><h4 id="console-count"><a href="#console-count" class="headerlink" title="console.count()"></a>console.count()</h4><p>可以計算某個屬性或者值出現的次數，可以用來追蹤特定的程式碼的執行次數</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">randomNum</span>(<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">count</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">randomNum</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>));</span><br><span class="line"><span class="title function_">randomNum</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>));</span><br><span class="line"><span class="title function_">randomNum</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>));</span><br><span class="line"><span class="title function_">randomNum</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>));</span><br><span class="line"><span class="title function_">randomNum</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>));</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/Btb425c.png" alt="console.count()"></p><hr><h4 id="console-clear"><a href="#console-clear" class="headerlink" title="console.clear()"></a>console.clear()</h4><p>可以將不重要的訊息一次清除，專注在想獲得的資訊上面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Joey&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Joe&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Joyce&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">clear</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;empty&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/wgeOwR1.png" alt="console.clear()"></p><hr><h4 id="console-error"><a href="#console-error" class="headerlink" title="console.error()"></a>console.error()</h4><p>以醒目的方式，在console面板上提示錯誤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user= <span class="string">&#x27;Joey&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`<span class="subst">$&#123;user&#125;</span> 你完蛋了`</span>);</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/x0a4NkZ.png" alt="console.clear()"></p><hr><h4 id="回憶過去"><a href="#回憶過去" class="headerlink" title="回憶過去"></a>回憶過去</h4><div class="note green icon-padding simple"><i class="note-icon far fa-grin-squint-tears"></i><p>之前開發的時候，有時候都忘記要使用console.log()一行一行去看我得到的值是什麼，<br>都會直接從畫面上看，怎麼跟預期的不一樣XD<br>後來看前輩幫忙我debug都會用console.log()看一下是發生了什麼事情，<br>漸漸的我也會提醒自己發生非預期的結果時，可以用console看一下哈</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://codelove.tw/@tony/post/gqBQa7?fbclid=IwAR1C6TZ4OWv72PQ4q1Kb1rJoAO3882cm_-cGcZrIRB1u7_bvg2dT3qvOYnY">都要 2023 年了還在用 console.log 嗎？來看看 10 個 console 進階用法！</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Console">MDN-Console</a><br><a href="https://www.casper.tw/development/2021/09/14/js-console/">JavaScript Console 運用技巧-8 招讓你除錯更高效</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/API/console/group">MDN-console.group()</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的運算子(๑¯∀¯๑)</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-型別介紹</title>
      <link href="/posts/48e09b869798/"/>
      <url>/posts/48e09b869798/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon far fa-futbol"></i><p>昨天看了世界盃足球賽 梅西贏了!又一個時代的結束XD<br>梅西的為人還有奮力一搏，應該帶給許多球迷很多希望跟快樂&gt;&lt;</p><p>好啦,今天要來記錄JavaScript裡面常用的型別!</p></div><h2 id="有哪些型別呢"><a href="#有哪些型別呢" class="headerlink" title="有哪些型別呢?"></a>有哪些型別呢?</h2><ul><li>字串(String)</li><li>數值(Number)</li><li>NaN (Not a Number)</li><li>布林(Boolean)</li><li>未定義(Undefined)</li><li>空值(Null)</li><li>物件(Object)</li><li>陣列(Array)</li></ul><hr><h3 id="字串-String"><a href="#字串-String" class="headerlink" title="字串(String)"></a>字串(String)</h3><p>我覺得定義資料時，最常用的型別就是字串了!<br>要定義文字資料時，都會使用到字串~</p><ul><li>基本字串的使用</li></ul><p><code>字串可以使用成對的單引號或者成對的雙引號來表示</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> champion = <span class="string">&#x27;Argentina&#x27;</span>; <span class="comment">//阿根廷</span></span><br><span class="line"><span class="keyword">var</span> teamLeader = <span class="string">&#x27;Lionel Andrés Messi Cuccittini&#x27;</span>; <span class="comment">//梅西的全名</span></span><br></pre></td></tr></table></figure><ul><li>樣板字面值（Template literals）<br>因為有時會需要將很多字串連接再一起，如果都透過+號來連接字串，會看起來內容冗長，所以ES6後出現了一個新的寫法</li></ul><p>一般寫法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> hello = <span class="string">&#x27;Hello, today is &#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> weather = <span class="string">&#x27;sunny&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> doSomething = <span class="string">&#x27;, where are you going?&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> greeting = hello + weather + doSomething;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(greeting);</span><br><span class="line"><span class="comment">// Hello,today is sunny,where are you going?</span></span><br></pre></td></tr></table></figure><p>樣板字面值<br>-會使用&#96;&#96;(兩個反引號)將字串給包起來(鍵盤中波浪符號的位置)，變數的地方則是使用${}放入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> weather = <span class="string">&#x27;sunny&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> greeting = <span class="string">`Hello, today is <span class="subst">$&#123;weather&#125;</span>, where are you going?`</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(greeting);</span><br><span class="line"><span class="comment">// Hello,today is sunny,where are you going?</span></span><br></pre></td></tr></table></figure><ul><li>轉型成字串<br>使用String()方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> friesPrice = <span class="number">58</span>;</span><br><span class="line"><span class="keyword">let</span> priceString = <span class="title class_">String</span>(friesPrice); <span class="comment">//&#x27;18&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>在其他程式語言，還有一個字元(Char)的型別，<br>但JavaScript只有字串一種型別!<br>下方一起來看看在c#中有的字元型別</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">char</span> chA = <span class="string">&#x27;A&#x27;</span>;</span><br></pre></td></tr></table></figure></div> <hr><h3 id="數值-Number"><a href="#數值-Number" class="headerlink" title="數值(Number)"></a>數值(Number)</h3><h4 id="基本常見的運算，可以使用加減乘除來運算數值"><a href="#基本常見的運算，可以使用加減乘除來運算數值" class="headerlink" title="基本常見的運算，可以使用加減乘除來運算數值"></a>基本常見的運算，可以使用加減乘除來運算數值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> friesPrice = <span class="number">58</span>;</span><br><span class="line"><span class="keyword">let</span> increasePrice = friesPrice + <span class="number">7</span>; <span class="comment">//65</span></span><br><span class="line"><span class="keyword">let</span> decreasedPrice = friesPrice -<span class="number">3</span>; <span class="comment">//55</span></span><br><span class="line"><span class="keyword">let</span> doublePrice = friesPrice * <span class="number">2</span>; <span class="comment">//116</span></span><br><span class="line"><span class="keyword">let</span> halfPrice = friesPrice / <span class="number">2</span>; <span class="comment">//29</span></span><br></pre></td></tr></table></figure><h4 id="轉型成數值"><a href="#轉型成數值" class="headerlink" title="轉型成數值"></a>轉型成數值</h4><ul><li>Number:會將內容轉型成數字</li><li>parseInt:會把內容轉型成<code>整數</code>，小數的部分就會被捨棄</li><li>parseFloat:會把內容轉型成<code>浮點數</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> weight = <span class="string">&#x27;65.5&#x27;</span>;</span><br><span class="line"><span class="title class_">Number</span>(weight); <span class="comment">//65.5</span></span><br><span class="line"><span class="built_in">parseInt</span>(weight); <span class="comment">//65</span></span><br><span class="line"><span class="built_in">parseFloat</span>(weight); <span class="comment">//65.5</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>在其他程式語言，有區很多種數字型別像是整數、浮點數等<br>但JavaScript一種數字型別!<br>下方一起來看看在c#中有的數字型別</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> num = <span class="number">888</span>; <span class="comment">//整數</span></span><br><span class="line"><span class="built_in">float</span> a = <span class="number">3.</span> <span class="number">123456f</span>; <span class="comment">//精準度達小數後6位數</span></span><br><span class="line"><span class="built_in">double</span> b = <span class="number">0.12345678901234</span>d; <span class="comment">//精準度達小數後14位數</span></span><br><span class="line"><span class="built_in">decimal</span> c = <span class="number">6.1234567890123456789012345678</span>m; <span class="comment">//精準度達小數後28位數</span></span><br></pre></td></tr></table></figure></div> <hr><h3 id="NaN-Not-a-Number"><a href="#NaN-Not-a-Number" class="headerlink" title="NaN (Not a Number)"></a>NaN (Not a Number)</h3><p>如果不是數值的型別跟數值一起運算或者想轉型成數值時，<code>不能成功轉型成數值或者沒有辦法計算結果</code>，<br>JS就會回傳NaN這個值~可以看看<a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/NaN">MDN-NaN</a>中的解釋</p><p>我個人目前在開發上也很少碰到(可能經驗還不夠多?)</p><hr><h3 id="布林-Boolean"><a href="#布林-Boolean" class="headerlink" title="布林(Boolean)"></a>布林(Boolean)</h3><p>就是常聽見的true跟false，代表<code>真</code>跟<code>假</code>的或者代表<code>是</code>跟<code>否</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isOpen = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> isSunny = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>大部分使用Boolean的時候會搭配條件判斷，當某個條件成立時，就做什麼<br>像是今天如果是晴天我就去打球</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isSunny = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> doSomething = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(isSunny) &#123;</span><br><span class="line">  doSomething = <span class="string">&#x27;打球&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div> <hr><h3 id="未定義-Undefined"><a href="#未定義-Undefined" class="headerlink" title="未定義(Undefined)"></a>未定義(Undefined)</h3><p>undefined類型只有一種值，就是undefined<br>-如果某個值被宣告，但尚未定義內容，這個變數就會是undefined</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> friesPrice;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(friesPrice); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><hr><h3 id="空值-Null"><a href="#空值-Null" class="headerlink" title="空值(Null)"></a>空值(Null)</h3><p>null類型只有一種值，就是null<br>-明確宣告這個變數它是空值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> friesPrice = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(friesPrice); <span class="comment">// null</span></span><br></pre></td></tr></table></figure><hr><h3 id="物件-Object"><a href="#物件-Object" class="headerlink" title="物件(Object)"></a>物件(Object)</h3><p>在JS中的物件代表的是<code>一個鍵與值的配對(key-value)</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> object = &#123;</span><br><span class="line">  <span class="attr">key1</span>: <span class="string">&#x27;value1&#x27;</span>,</span><br><span class="line">  <span class="attr">key2</span>: <span class="string">&#x27;value2&#x27;</span>,</span><br><span class="line">  <span class="attr">key3</span>: <span class="string">&#x27;value3&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用大括號創造一個物件</span></span><br><span class="line"><span class="comment">// key1是鍵</span></span><br><span class="line"><span class="comment">// value1是值</span></span><br><span class="line"><span class="comment">// 用:(冒號)把鍵值區隔</span></span><br></pre></td></tr></table></figure><hr><h3 id="陣列-Array"><a href="#陣列-Array" class="headerlink" title="陣列(Array)"></a>陣列(Array)</h3><p><code>陣列的第一個元素，索引(index)是0</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;value1&#x27;</span>, <span class="string">&#x27;value2&#x27;</span>, <span class="string">&#x27;value3&#x27;</span> .....];</span><br><span class="line"><span class="comment">// 使用中括號創建一個陣列</span></span><br><span class="line"><span class="comment">// 用,(逗號)區隔陣列的內容</span></span><br><span class="line"><span class="comment">// 通常放在陣列裡面的內容，會用元素(element)稱呼</span></span><br></pre></td></tr></table></figure><hr><h4 id="回憶過去"><a href="#回憶過去" class="headerlink" title="回憶過去"></a>回憶過去</h4><div class="note green icon-padding simple"><i class="note-icon far fa-grin-squint-tears"></i><p>不管是哪個程式語言都有差不多的型別(可能寫法不太一樣)，<br>不過有些程式語言的型別非常重要，<br>今年剛開始寫C#時，常常出現型別的Error 哈哈</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/NaN">MDN-NaN</a><br><a href="https://www.books.com.tw/products/0010832387">0 陷阱！0 誤解！8 天重新認識 JavaScript！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹可以在Web控制台印出JavaScript值或者結果的console.log()方法(๑´ㅂ&#96;๑)</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript,無所畏懼-變數</title>
      <link href="/posts/600e20709142/"/>
      <url>/posts/600e20709142/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><div class="note icon-padding simple"><i class="note-icon fas fa-paw"></i><p>人生,無所畏懼；那學JavaScript也要無所畏懼啦!<br>雖然已經踏入職場兩年多，做過前端也做過後端，但自己的基礎底子感覺還不太夠呢XD<br>藉由這個系列，想要好好重新了解JavaScript的概念以及把這些記錄下來&gt;&lt;</p><p>今天就從簡單的變數來開始吧!</p></div><h2 id="什麼是變數"><a href="#什麼是變數" class="headerlink" title="什麼是變數?"></a>什麼是變數?</h2><p>今天去麥當勞買了一份大薯58元，下週三的時候要漲價變成65元了QQ<br>此時我們就可以把薯條的價格當作一個變數，可能今天是58元，下週就變成65元</p><p>2022&#x2F;12&#x2F;18價格<br>大薯 ———– 58元</p><p>2022&#x2F;12&#x2F;21價格<br>大薯 ———– 65元</p><h2 id="變數的宣告"><a href="#變數的宣告" class="headerlink" title="變數的宣告"></a>變數的宣告</h2><p>來看看JavaScript裡面怎麼宣告的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> friesPrice = <span class="number">58</span>;</span><br></pre></td></tr></table></figure><p><code>var</code> 是宣告變數的用法<br><code>friesPrice</code> 是變數名稱<br><code>58</code> 是變數的值</p><p>這邊使用的<code>var</code>是最出現的用法，但實務上比較常用的是ES6後出現的<code>let</code>跟<code>const</code>，<br>當然一些老舊專案還是很常看見使用var的變數宣告的用法呦!</p><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p>那透過這個大薯的例子呢，我們可以了解大薯的價格是可以因為漲價而被重新賦予值的，friesPrice是一個可能會變動的值，這就是變數的概念</p></div><h4 id="小提醒"><a href="#小提醒" class="headerlink" title="小提醒"></a>小提醒</h4><div class="note blue icon-padding simple"><i class="note-icon fas fa-feather"></i><p>變數只能用$、_以及字母最為開頭<br>變數名稱的大小寫是有區別的，FriesPrice跟friesPrice會被視為兩個不同的變數<br>不能使用保留字(ex:var、let、const)</p></div> <h4 id="回憶過去"><a href="#回憶過去" class="headerlink" title="回憶過去"></a>回憶過去</h4><div class="note green icon-padding simple"><i class="note-icon far fa-grin-squint-tears"></i><p>還記得剛踏入社會的自己，因為不知道怎麼命名變數，還直接寫了xxx1、xxx2，<br>直接被前輩們說了，不能這樣，維護很辛苦XD<br>記得要用<code>有意義的變數名稱</code>，這樣有多人協作時，才不會要一直去找這個變數代表什麼XD</p></div> <h3 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h3><div class="note orange icon-padding disabled"><i class="note-icon fas fa-link"></i><p><a href="https://www.books.com.tw/products/0010891408">JavaScript概念三明治：基礎觀念、語法原理一次帶走！（iT邦幫忙鐵人賽系列書）</a></p></div><hr><div class="note blue icon-padding disabled"><i class="note-icon far fa-paper-plane"></i><p>下一篇要介紹JavaScript的型別(｡◕∀◕｡)</p></div>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一起來學習Markdown語法</title>
      <link href="/posts/37d11d5facf8/"/>
      <url>/posts/37d11d5facf8/</url>
      
        <content type="html"><![CDATA[<p>不管是用 Hexo 建立的 Blog 還是用來當筆記本的 HackMD 都是使用 Markdown 語法<br>之前上的一個 python 共學營也是使用 Markdown 語法來編輯文章作業 XD</p><p>最近我有一個朋友也開始使用 HackMD 正在使用 Markdown 語法，所以來記錄一下，我自己常用的語法在分享給朋友 XD</p><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p><a href="https://markdown.tw/">Markdown 文件</a></p></div><h2 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h2><p>標題的話有6個階層，可以想成是 HTML 的 H1 ~ H6</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1標題</span></span><br><span class="line"><span class="section">## H2標題</span></span><br><span class="line"><span class="section">### H3標題</span></span><br><span class="line"><span class="section">#### H4標題</span></span><br><span class="line"><span class="section">##### H5標題</span></span><br><span class="line"><span class="section">###### H6標題</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><h1 id="H1標題"><a href="#H1標題" class="headerlink" title="H1標題"></a>H1標題</h1><h2 id="H2標題"><a href="#H2標題" class="headerlink" title="H2標題"></a>H2標題</h2><h3 id="H3標題"><a href="#H3標題" class="headerlink" title="H3標題"></a>H3標題</h3><h4 id="H4標題"><a href="#H4標題" class="headerlink" title="H4標題"></a>H4標題</h4><h5 id="H5標題"><a href="#H5標題" class="headerlink" title="H5標題"></a>H5標題</h5><h6 id="H6標題"><a href="#H6標題" class="headerlink" title="H6標題"></a>H6標題</h6><h2 id="清單"><a href="#清單" class="headerlink" title="清單"></a>清單</h2><h3 id="無序清單"><a href="#無序清單" class="headerlink" title="無序清單"></a>無序清單</h3><p>使用 * + - 這三個符號的效果是一樣的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 清單一</span><br><span class="line"><span class="bullet">*</span> 清單二</span><br><span class="line"><span class="bullet">*</span> 清單三</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 清單四</span><br><span class="line"><span class="bullet">+</span> 清單五</span><br><span class="line"><span class="bullet">+</span> 清單六</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 清單七</span><br><span class="line"><span class="bullet">-</span> 清單八</span><br><span class="line"><span class="bullet">-</span> 清單九</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><ul><li>清單一</li><li>清單二</li><li>清單三</li></ul><ul><li>清單四</li><li>清單五</li><li>清單六</li></ul><ul><li>清單七</li><li>清單八</li><li>清單九</li></ul><h3 id="有序清單"><a href="#有序清單" class="headerlink" title="有序清單"></a>有序清單</h3><p>因為有序清單在Html輸出都是<code>&lt;ol&gt;&lt;/ol&gt;</code>標籤，所以有序的數字不影響實際上的排序</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 清單一</span><br><span class="line"><span class="bullet">2.</span> 清單二</span><br><span class="line"><span class="bullet">3.</span> 清單三</span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> 清單四</span><br><span class="line"><span class="bullet">6.</span> 清單六</span><br><span class="line"><span class="bullet">9.</span> 清單九</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><ol><li><p>清單一</p></li><li><p>清單二</p></li><li><p>清單三</p></li><li><p>清單四</p></li><li><p>清單六</p></li><li><p>清單九</p></li></ol><h2 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a>圖片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Img敘述</span>](<span class="link">imgurl</span>)</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><p><img src="https://imgur.com/F4uK6hy.png]" alt="Img敘述"></p><h2 id="超連結"><a href="#超連結" class="headerlink" title="超連結"></a>超連結</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">顯示的敘述</span>](<span class="link">url</span>)</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><p><a href="https://lingxuan0618.github.io/">Xuan’s Blog</a></p><h2 id="水平線"><a href="#水平線" class="headerlink" title="水平線"></a>水平線</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><hr><h2 id="表格-Table"><a href="#表格-Table" class="headerlink" title="表格(Table)"></a>表格(Table)</h2><p>表格沒對齊，也沒關係的</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| thead 1 | thead 2 | tread 3 |</span><br><span class="line">|---------|---------|---------|</span><br><span class="line">| td      | td      | td      |</span><br><span class="line">| td      | td   | td    |</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><table><thead><tr><th>thead 1</th><th>thead 2</th><th>tread 3</th></tr></thead><tbody><tr><td>td</td><td>td</td><td>td</td></tr><tr><td>td</td><td>td</td><td>td</td></tr></tbody></table><h2 id="程式碼區塊"><a href="#程式碼區塊" class="headerlink" title="程式碼區塊"></a>程式碼區塊</h2><h3 id="行內程式碼"><a href="#行內程式碼" class="headerlink" title="行內程式碼"></a>行內程式碼</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我是<span class="code">``` 行內程式碼 ```</span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><p>我是<code>行內程式碼</code></p><h3 id="多行"><a href="#多行" class="headerlink" title="多行"></a>多行</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3個` 打上想要顯示的語言(要有被支援的語言, EX:Markdown)</span><br><span class="line">程式碼區塊</span><br><span class="line">3個`</span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">程式碼區塊</span><br></pre></td></tr></table></figure><h2 id="給文字顏色"><a href="#給文字顏色" class="headerlink" title="給文字顏色"></a>給文字顏色</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#2894FF&quot;</span>&gt;</span></span> 我是藍色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#FFFF93&quot;</span>&gt;</span></span> 我是黃色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-down"></i><p>效果圖</p></div><p><font color="#2894FF"> 我是藍色</font><br><font color="#FFFF93"> 我是黃色</font></p><hr><p>稍微紀錄常用的Markdown語法，不過在Blog上的跟在HackMD上的有些效果還是不太一樣<br>但語法都是一樣的啦，之後有想到什麼再繼續補充</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次建立Vite專案(UI框架使用Tailwind)</title>
      <link href="/posts/9b760891259f/"/>
      <url>/posts/9b760891259f/</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p><a href="https://cn.vitejs.dev/guide/#trying-vite-online">Vite 文檔</a></p></div><h3 id="建立第一個Vite-項目"><a href="#建立第一個Vite-項目" class="headerlink" title="建立第一個Vite 項目"></a>建立第一個Vite 項目</h3><p>可以選擇用</p><ul><li><p>npm的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest</span><br></pre></td></tr></table></figure></li><li><p>yarn的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create vite</span><br></pre></td></tr></table></figure></li></ul><p>跟著步驟打上專案名稱以及選擇要創建的專案種類<br>或者也可以直接選擇加上需要的專案種類</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># npm 6.x</span><br><span class="line">npm create vite@latest my-vue-app --template vue</span><br><span class="line"></span><br><span class="line"># npm 7+, extra double-dash is needed:</span><br><span class="line">npm create vite@latest my-vue-app -- --template vue</span><br></pre></td></tr></table></figure><p>建立出來的專案名稱是my-vue-app<br>所以我自己在桌面將專案名稱改為F2E2022_Week1<br>依序輸入下面三個指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd F2E2022_Week1</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>會看到終端機出現如下畫面，就可以到瀏覽器輸入Local上的網址<br>  <img src="https://imgur.com/byEKQrj.png" alt="Imgur"><br>就可以看見成功建立Vite x Vue的專案啦~<br>  <img src="https://imgur.com/um6raiy.png" alt="Imgur"></p><hr><h3 id="加入Tailwind"><a href="#加入Tailwind" class="headerlink" title="加入Tailwind"></a>加入Tailwind</h3><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p><a href="https://tailwindcss.com/docs/guides/vite#vue">Install Tailwind CSS with Vite</a></p></div><h4 id="Create-your-project"><a href="#Create-your-project" class="headerlink" title="Create your project"></a>Create your project</h4><p>文檔的第一個步驟是建立一個專案，但我們剛剛建立過了所以可以進到下一個步驟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm create vite@latest my-project -- --template vue</span><br><span class="line">cd my-project</span><br></pre></td></tr></table></figure><h4 id="Install-Tailwind-CSS"><a href="#Install-Tailwind-CSS" class="headerlink" title="Install Tailwind CSS"></a>Install Tailwind CSS</h4><p>第二個步驟安裝Tailwind，會建立出<code>tailwind.config.cjs</code>、<code>postcss.config.cjs</code>這兩個檔案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -D tailwindcss postcss autoprefixer</span><br><span class="line">npx tailwindcss init -p</span><br></pre></td></tr></table></figure><h4 id="Configure-your-template-paths"><a href="#Configure-your-template-paths" class="headerlink" title="Configure your template paths"></a>Configure your template paths</h4><p>我們可以到tailwind.config.cjs檔案中加上所有模板的文件路徑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  content: [</span><br><span class="line">    &quot;./index.html&quot;, &quot;./src/**/*.&#123;vue,js&#125;&quot;,</span><br><span class="line">  ],</span><br><span class="line">  theme: &#123;</span><br><span class="line">    extend: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Add-the-Tailwind-directives-to-your-CSS"><a href="#Add-the-Tailwind-directives-to-your-CSS" class="headerlink" title="Add the Tailwind directives to your CSS"></a>Add the Tailwind directives to your CSS</h4><p>到.&#x2F;src&#x2F;style.css中添加下方代碼</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@tailwind base;</span><br><span class="line">@tailwind components;</span><br><span class="line">@tailwind utilities;</span><br></pre></td></tr></table></figure><h4 id="Start-your-build-process"><a href="#Start-your-build-process" class="headerlink" title="Start your build process"></a>Start your build process</h4><p>在終端機輸入npm run dev，建置Local環境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h4 id="Start-using-Tailwind-in-your-project"><a href="#Start-using-Tailwind-in-your-project" class="headerlink" title="Start using Tailwind in your project"></a>Start using Tailwind in your project</h4><p>可以在App.vue中加入程式碼，就可以看見效果啦!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1 class=&quot;text-3xl font-bold underline text-blue-600 pb-4&quot;&gt;</span><br><span class="line">    Hello Vite X Tailwind</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">  &lt;button class=&quot;rounded-lg bg-black text-white&quot;&gt;Getting Start&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/6J6v0tN.png" alt="Imgur"></p><hr><p>開始寫專案啦&gt;&lt;</p>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FrontEnd </tag>
            
            <tag> Vite </tag>
            
            <tag> Vue </tag>
            
            <tag> Tailwind </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端上傳前預覽圖片</title>
      <link href="/posts/0aa4220ee0fb/"/>
      <url>/posts/0aa4220ee0fb/</url>
      
        <content type="html"><![CDATA[<p>總是在寫需求的時候，會有圖片或者檔案上傳下載的功能…<br>有一個前端套件他可以在上傳檔案以及圖片的時候直接做預覽，只是是用JQuery~</p><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p><a href="https://www.npmjs.com/package/bootstrap-fileinput">bootstrap-fileinput 文檔</a></p></div><p>那如果今天想要透過JavaScript或者JQuery自己實作圖片上傳前的預覽該怎麼做呢?</p><p>我是先假設今天會有一個img所屬的div在尚未有圖檔之前先用display:none隱藏區塊，待有檔案之後，再將屬性拿掉所以下方的程式碼就會看見對img區塊的操作!</p><h2 id="JavaScript版本-UI套用Bootstrap"><a href="#JavaScript版本-UI套用Bootstrap" class="headerlink" title="JavaScript版本(UI套用Bootstrap)"></a>JavaScript版本(UI套用Bootstrap)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> formFile = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#formFile&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> btnClose = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn-close&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> showImg = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#showImg&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> imgBlock = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#imgBlock&#x27;</span>);</span><br><span class="line"><span class="comment">// 上傳預覽</span></span><br><span class="line">formFile.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> file = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(formFile.<span class="property">files</span>[<span class="number">0</span>]);</span><br><span class="line">  showImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, file);</span><br><span class="line">  imgBlock.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;d-none&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//點擊刪除按鈕</span></span><br><span class="line">btnClose.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  imgBlock.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;d-none&#x27;</span>)</span><br><span class="line">  formFile.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  showImg.<span class="title function_">setAttribute</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><iframe id="cp_embed_zYaKYxj" src="//codepen.io/lingxuan0618|anonymous|anon/embed/zYaKYxj?height=400&theme-id=dark&slug-hash=zYaKYxj&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h2 id="jQuery版本-UI套用Bootstrap"><a href="#jQuery版本-UI套用Bootstrap" class="headerlink" title="jQuery版本(UI套用Bootstrap)"></a>jQuery版本(UI套用Bootstrap)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上傳預覽</span></span><br><span class="line">$(<span class="string">&#x27;#formFile&#x27;</span>).<span class="title function_">change</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#showImg&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>($(<span class="variable language_">this</span>)[<span class="number">0</span>].<span class="property">files</span>[<span class="number">0</span>]));</span><br><span class="line">  $(<span class="string">&#x27;#imgBlock&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;d-none&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//點擊刪除按鈕</span></span><br><span class="line">$(<span class="string">&#x27;.btn-close&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  $(<span class="string">&#x27;#showImg&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#formFile&#x27;</span>).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">  $(<span class="string">&#x27;#imgBlock&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;d-none&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><iframe id="cp_embed_QWxKWMg" src="//codepen.io/lingxuan0618|anonymous|anon/embed/QWxKWMg?height=400&theme-id=dark&slug-hash=QWxKWMg&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/URL/createObjectURL">URL.createObjectURL() MDN</a><br><a href="https://developer.mozilla.org/zh-TW/docs/Web/CSS/object-fit">object-fit MDN</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener">EventTarget.addEventListener() MDN</a><br><a href="https://kknews.cc/zh-tw/news/3nxga9a.html">10行JavaScript代碼完成圖片的上傳預覽</a></p>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python大量修改圖片尺寸</title>
      <link href="/posts/df5b2e2967cb/"/>
      <url>/posts/df5b2e2967cb/</url>
      
        <content type="html"><![CDATA[<p>大學玩樹莓派的時候，有接觸過一點python，去年也有參加python的共學營，喜歡python，但還沒有太深入的研究XDD<br>知道Python可以做到滿多事情的，前陣子有個需求是需要大量修改圖片，本來打算用上班再使用的.NET去處理，但想到要開localhost或者上程式到server跑就覺得好麻煩(x，突然想到我大python感覺就可以做到，於是下班後開始研究…</p><p><code>還沒有深入了解每一行是在寫什麼，之後如果繼續踏上python之路，有學習到什麼相關，再回來補充XD</code></p><h2 id="原始範例圖片"><a href="#原始範例圖片" class="headerlink" title="原始範例圖片"></a>原始範例圖片</h2><p><img src="https://imgur.com/vlFMiFV.png" alt="範例圖片"></p><table><thead><tr><th>圖片名稱</th><th>尺寸大小</th></tr></thead><tbody><tr><td>海.jpg</td><td>2048*1365</td></tr><tr><td>畢業.jpg</td><td>2362*1772</td></tr></tbody></table><h2 id="調整大小-會壓縮比例"><a href="#調整大小-會壓縮比例" class="headerlink" title="調整大小(會壓縮比例)"></a>調整大小(會壓縮比例)</h2><p>先引入<a href="https://pillow.readthedocs.io/en/stable/">PIL</a>模組<br>接著決定路徑<br>再來獲取每張圖片做壓縮尺寸</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 調整大小</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span>  Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">path = <span class="string">&quot;./Img&quot;</span>  <span class="comment">#圖片所在的文件夾路徑</span></span><br><span class="line"><span class="keyword">for</span> maindir, subdir,file_name_list <span class="keyword">in</span> os.walk(path):</span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> file_name_list:</span><br><span class="line">        image = os.path.join(maindir, file_name) <span class="comment">#獲取每張圖片的路徑</span></span><br><span class="line">        file = Image.<span class="built_in">open</span>(image)</span><br><span class="line">        out = file.resize((<span class="number">480</span>,<span class="number">360</span>),Image.ANTIALIAS)  <span class="comment">#以高質量修改圖片尺寸爲（480，360）</span></span><br><span class="line">        <span class="comment"># out.save(image)                            #以同名保存到原路徑</span></span><br><span class="line">        out.save(<span class="string">f&#x27;./newImg/<span class="subst">&#123;image&#125;</span>&#x27;</span>) <span class="comment"># 原圖存檔在新目錄</span></span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/xMcCju4.png" alt="Imgur"></p><table><thead><tr><th>圖片名稱</th><th>尺寸大小</th></tr></thead><tbody><tr><td>海.jpg</td><td>480*360</td></tr><tr><td>畢業.jpg</td><td>480*360</td></tr></tbody></table><h4 id="左邊是原圖，右邊則是壓縮過後的圖片"><a href="#左邊是原圖，右邊則是壓縮過後的圖片" class="headerlink" title="左邊是原圖，右邊則是壓縮過後的圖片"></a>左邊是原圖，右邊則是壓縮過後的圖片</h4><h4 id="可以發現因為不是等比例壓縮，所以大家都變瘦變高了-x"><a href="#可以發現因為不是等比例壓縮，所以大家都變瘦變高了-x" class="headerlink" title="可以發現因為不是等比例壓縮，所以大家都變瘦變高了(x"></a>可以發現因為不是等比例壓縮，所以大家都變瘦變高了(x</h4><h2 id="調整比例-可能無法完整符合需求尺寸"><a href="#調整比例-可能無法完整符合需求尺寸" class="headerlink" title="調整比例(可能無法完整符合需求尺寸)"></a>調整比例(可能無法完整符合需求尺寸)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 調整大小</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">imgs = glob.glob(<span class="string">&#x27;./Img/*.[jJ][pP][gG]&#x27;</span>) <span class="comment">#圖片所在的文件夾路徑</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> imgs:</span><br><span class="line">    im = Image.<span class="built_in">open</span>(i)</span><br><span class="line">    size = im.size</span><br><span class="line">    <span class="built_in">max</span> = <span class="number">480</span>                    <span class="comment"># 設定長或寬最大的數值</span></span><br><span class="line">    <span class="keyword">if</span> size[<span class="number">0</span>]&gt;size[<span class="number">1</span>]:          <span class="comment"># 如果原始圖片 width 大於 height</span></span><br><span class="line">        scale = size[<span class="number">1</span>]/size[<span class="number">0</span>]  <span class="comment"># 設定 scale 為 height/width</span></span><br><span class="line">        w = <span class="built_in">max</span>                  <span class="comment"># 設定調整後的寬度為最大的數值</span></span><br><span class="line">        h = <span class="built_in">int</span>(<span class="built_in">max</span>*scale)       <span class="comment"># 設定調整後的高度為 max 乘以 scale ( 使用 int 去除小數點 )</span></span><br><span class="line">    <span class="keyword">else</span>:                        <span class="comment"># 如果原始圖片 width 小於等於 height</span></span><br><span class="line">        scale = size[<span class="number">0</span>]/size[<span class="number">1</span>]  <span class="comment"># 設定 scale 為 width/height</span></span><br><span class="line">        w = <span class="built_in">int</span>(<span class="built_in">max</span>*scale)       <span class="comment"># 設定調整後的寬度為 max 乘以 scale ( 使用 int 去除小數點 )</span></span><br><span class="line">        h = <span class="built_in">max</span>                  <span class="comment"># 設定調整後的高度為最大的數值</span></span><br><span class="line">    <span class="comment"># name = i.split(&#x27;/&#x27;)[::-1][0]</span></span><br><span class="line">    name = i.split(<span class="string">&#x27;\\&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    im2 = im.resize((w, h))      <span class="comment"># 調整尺寸</span></span><br><span class="line">    <span class="comment"># im2.save(i) #以同名保存到原路徑</span></span><br><span class="line">    im2.save(<span class="string">f&#x27;./newImg(ratio)/<span class="subst">&#123;name&#125;</span>&#x27;</span>) <span class="comment"># 原圖存檔在新目錄</span></span><br><span class="line">    <span class="comment">#jpg = name.replace(&#x27;JPG&#x27;,&#x27;jpg&#x27;)  # 取出圖片檔名，將 jpg 換成 png</span></span><br><span class="line">    <span class="comment">#png = jpg.replace(&#x27;jpg&#x27;,&#x27;png&#x27;)  # 取出圖片檔名，將 jpg 換成 png</span></span><br><span class="line">    <span class="comment">#im2.save(f&#x27;./官網客戶需求產品圖--480×320/&#123;png&#125;&#x27;, &#x27;png&#x27;)   # 轉換成 png 並存檔在新目錄</span></span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/njx6f9a.jpg" alt="Imgur"></p><table><thead><tr><th>圖片名稱</th><th>尺寸大小</th></tr></thead><tbody><tr><td>海.jpg</td><td>480*319</td></tr><tr><td>畢業.jpg</td><td>480*360</td></tr></tbody></table><h4 id="圖片是按照設定的480去等比例縮小-就不會被壓縮啦"><a href="#圖片是按照設定的480去等比例縮小-就不會被壓縮啦" class="headerlink" title="圖片是按照設定的480去等比例縮小~就不會被壓縮啦"></a>圖片是按照設定的480去等比例縮小~就不會被壓縮啦</h4><h3 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章"></a>參考文章</h3><p><a href="https://ithelp.ithome.com.tw/articles/10287530?sc=iThelpR">( Day 3 ) 批次調整圖片尺寸</a><br><a href="https://vimsky.com/zh-tw/examples/detail/python-ex-classes.query-File-save-method.html">Python File.save方法代碼示例</a><br><a href="https://www.twblogs.net/a/5d7e2f5dbd9eee541c346249">python批量修改圖片尺寸</a><br><a href="https://ithelp.ithome.com.tw/articles/10226578">Day24-Python 影像處理套件 PIL</a><br><a href="https://ithelp.ithome.com.tw/articles/10262521">python 好用套件：利用 glob 抓取路徑下檔案名稱</a></p>]]></content>
      
      
      <categories>
          
          <category> BackEnd </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> BackEnd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>網頁上中英文套用不同的font-family</title>
      <link href="/posts/df45c9fbc91f/"/>
      <url>/posts/df45c9fbc91f/</url>
      
        <content type="html"><![CDATA[<p>今天呢，要來介紹怎麼在網頁中的字體(font-family)，中英文套用不同的字體!<br>本來希望自己Blog的中英文套用不同字體，但是選了open粉圓的字體，覺得中英文都好好看就不換了XD</p><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p><a href="https://justfont.com/huninn/">open 粉圓 justFont</a></p></div><hr><p>回歸正題</p><h3 id="參考文章"><a href="#參考文章" class="headerlink" title="參考文章:"></a>參考文章:</h3><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p><a href="https://www.casper.tw/sass/2014/02/21/font-code-range/">卡斯伯’s Blog-CSS設定中英文不同的字體</a></p></div><h2 id="CSS-中英文套用不同字體"><a href="#CSS-中英文套用不同字體" class="headerlink" title="CSS-中英文套用不同字體"></a>CSS-中英文套用不同字體</h2><h3 id="主要是透過unicode來決定中英文顯示不同的字體"><a href="#主要是透過unicode來決定中英文顯示不同的字體" class="headerlink" title="主要是透過unicode來決定中英文顯示不同的字體"></a>主要是透過unicode來決定中英文顯示不同的字體</h3><p>可以透過 <a href="https://unicode-table.com/cn/">Unicode 字符百科</a> 查詢Unicode</p><p>所以我們可以查詢到英文跟中文的Unicode的範圍<br><a href="https://unicode-table.com/cn/blocks/cjk-unified-ideographs/">中日韓統一表意文字 範圍: 4E00—9FFF</a><br><a href="https://unicode-table.com/cn/blocks/basic-latin/">基本拉丁字母 範圍: 0000—007F</a><br><a href="https://unicode-table.com/cn/blocks/latin-1-supplement/">拉丁文補充1 範圍:  0080—00FF</a><br><a href="https://unicode-table.com/cn/blocks/latin-extended-a/">拉丁文擴展A 範圍: 0100—017F</a><br><a href="https://unicode-table.com/cn/blocks/latin-extended-b/">拉丁文擴展B 範圍: 0180—024F</a></p><table><thead><tr><th>語言</th><th>範圍</th></tr></thead><tbody><tr><td>中文</td><td>4E00—9FFF</td></tr><tr><td>英文</td><td>0000—024F</td></tr></tbody></table><h3 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 中文字體 */</span></span><br><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>: custom-pixel;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">/font/jf-openhuninn-1.1.ttf</span>);</span><br><span class="line">  unicode-range: U+<span class="number">4</span>E00-<span class="number">9</span>FFF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 英文字體 */</span></span><br><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>: custom-pixel;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">/font/KolkerBrush-Regular.ttf</span>);</span><br><span class="line">  unicode-range: U+<span class="number">00</span>-<span class="number">024</span>F;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: custom-pixel; //整個<span class="selector-tag">body</span>套用</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>可以看到我的中文跟英文套用不同的字體啦~(為了有效果所以選擇了差別很大的字體XD)<br><img src="https://imgur.com/kXxsDF6.png" alt="效果"></p><hr><p>這樣以後可以用不同的字體，讓網站更繽紛啦~</p>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FrontEnd </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初探JS動畫庫-GreenSock(二)</title>
      <link href="/posts/43f48091ad86/"/>
      <url>/posts/43f48091ad86/</url>
      
        <content type="html"><![CDATA[<p><a href="https://greensock.com/">GreenSock文檔</a><br>今天要說明怎麼樣讓box可以藉由Tween的屬性，可以播放、暫停移動<br>來!讓我們看代碼</p><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p>GSAP可以為任何對象的任何屬性設置動畫，因此不僅限於 CSS 屬性或 DOM 對象</p></div><h2 id="Tween-變量"><a href="#Tween-變量" class="headerlink" title="Tween 變量"></a>Tween 變量</h2><p>我們如果要控制Tween的話，可以給他變數</p><div class="note info no-icon simple"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tween = gsap.<span class="title function_">to</span>(<span class="string">&quot;.class&quot;</span>, &#123;<span class="attr">rotation</span>: <span class="number">360</span>, <span class="attr">duration</span>: <span class="number">5</span>, <span class="attr">ease</span>: <span class="string">&quot;elastic&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//now we can control it!</span></span><br><span class="line">tween.<span class="title function_">pause</span>();</span><br><span class="line">tween.<span class="title function_">seek</span>(<span class="number">2</span>);</span><br><span class="line">tween.<span class="title function_">progress</span>(<span class="number">0.5</span>);</span><br><span class="line">tween.<span class="title function_">play</span>();</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div><h2 id="box的控制"><a href="#box的控制" class="headerlink" title="box的控制"></a>box的控制</h2><p>可以從CodePen中，了解我們在按鈕上綁定Tween的一些特殊屬性，讓動畫有不同變化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tween = gsap.<span class="title function_">to</span>(<span class="string">&quot;.blue&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">4</span>, <span class="comment">//4s</span></span><br><span class="line">  <span class="attr">x</span>: <span class="number">750</span>, <span class="comment">//translateX(750px)</span></span><br><span class="line">  <span class="attr">rotation</span>: <span class="number">360</span>, <span class="comment">//rotate</span></span><br><span class="line">  <span class="attr">paused</span>: <span class="literal">true</span> <span class="comment">//初始暫停</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// click handlers for controlling the tween instance...</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#play&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> tween.<span class="title function_">play</span>(); <span class="comment">// 當點擊play這個Button時，讓box開始移動</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#pause&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> tween.<span class="title function_">pause</span>(); <span class="comment">// 當點擊pause這個Button時，讓box暫停移動</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#resume&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> tween.<span class="title function_">resume</span>(); <span class="comment">// 當現在是暫停時，點擊Resume重新開始移動</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#reverse&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> tween.<span class="title function_">reverse</span>();<span class="comment">// 當點擊reverse這個Button時，讓box反向移動</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#restart&quot;</span>).<span class="property">onclick</span> = <span class="function">() =&gt;</span> tween.<span class="title function_">restart</span>(); <span class="comment">// 當點擊restart這個Button時，讓box重新開始移動</span></span><br></pre></td></tr></table></figure><iframe id="cp_embed_LYrNZJN" src="//codepen.io/lingxuan0618|anonymous|anon/embed/LYrNZJN?height=400&theme-id=dark&slug-hash=LYrNZJN&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><p>今天簡單的讓我們的Box可以藉由控制動起來啦~</p>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
            <tag> Animation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>從0開始建立HEXO-套用Butterfly主題-個人Blog</title>
      <link href="/posts/c5a62da59b8a/"/>
      <url>/posts/c5a62da59b8a/</url>
      
        <content type="html"><![CDATA[<p>來記錄一下前幾天建立 Hexo * Butterfly Theme 的過程XD</p><h2 id="挑選主題"><a href="#挑選主題" class="headerlink" title="挑選主題"></a>挑選主題</h2><p>在決定建立 Hexo 之後，就開始挑選主題啦~<br>稍微爬文之後，覺得自己比較中意的有三個主題</p><ul><li>Hexo x Butterfly  <a href="https://butterfly.js.org/">Butterfly</a></li><li>Hexo x Next <a href="https://theme-next.js.org/">Theme NexT</a></li><li>Hexo x icarus <a href="https://github.com/ppoffice/hexo-theme-icarus">ICARUS</a></li></ul><p>最後參考了幾個使用該主題的部落格之後，覺得 Butterfly 好像比較符合我的胃口，所以就決定是 Butterfly 啦!<br>(以後真的膩了再考慮換一個或者重新建立一個XD)</p><hr><h2 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h2><p>參考了幾篇文章:<br><a href="https://butterfly.js.org/posts/21cfbf15/#%E5%AE%89%E8%A3%9D">Butterfly 安裝文檔(一) 快速開始</a><br><a href="https://ouoholly.github.io/post/build-github-hexo-butterfly-record/">【紀錄】由零開始，Github + Hexo (Butterfly theme) 搭建個人博客</a><br><a href="https://tzy1997.com/articles/hexo1606/">基於Hexo 從零開始搭建個人博客（六</a><br>第一個是 Butterfly 的作者<br>第二個跟第三個都是我覺得把這個主題建立的很有風格的人!<br>也參考了這三個文檔建立起了我的 Blog 啦</p><hr><h2 id="建立過程"><a href="#建立過程" class="headerlink" title="建立過程"></a>建立過程</h2><h3 id="下載及安裝Node-js"><a href="#下載及安裝Node-js" class="headerlink" title="下載及安裝Node.js"></a>下載及安裝Node.js</h3><p>因為我本身就有安裝惹 所以這次就沒有安裝XD</p><p>沒有安裝過的話，可以到<a href="https://nodejs.org/en/download/">官網</a>上做安裝</p><p>如果沒有安裝過 Node.js 的人也可以考慮直接安裝 nvm，可以自由切換 Node.js 版本<br>可以參考卡斯伯老師的文章<a href="https://www.casper.tw/development/2022/01/10/install-nvm/">安裝 nvm 環境，Node.js 開發者必學（Windows、Mac 均適用）</a></p><blockquote><p>檢查電腦中的Node版本<br>打開Windows cmd輸入第1及第3行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">v14.<span class="number">9</span>.<span class="number">1</span></span><br><span class="line">npm -v</span><br><span class="line"><span class="number">6</span>.<span class="number">14</span>.<span class="number">16</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="下載及安裝-Git"><a href="#下載及安裝-Git" class="headerlink" title="下載及安裝 Git"></a>下載及安裝 Git</h3><p>我的電腦也已經有這個環境了XD<br>不過一樣也可以到<a href="https://git-scm.com/">官網</a>做下載</p><blockquote><p>檢查電腦中的git版本<br>出現版本號應該就是沒問題了</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">git version <span class="number">2</span>.<span class="number">33</span>.<span class="number">0</span>.windows.<span class="number">2</span></span><br></pre></td></tr></table></figure></blockquote><p>也可以右鍵點擊桌面，如果看見Git GUI Here 和 Git Bash Here 的選項，就代表安裝成功啦!</p><h3 id="在-GitHub-建立-Repositories"><a href="#在-GitHub-建立-Repositories" class="headerlink" title="在 GitHub 建立 Repositories"></a>在 GitHub 建立 Repositories</h3><p>如果還沒有 GitHub 的帳號，要先建立一個<br><a href="https://github.com/">官網註冊</a><br>1.註冊完之後<br>2.建立一個新的 Repo <a href="https://github.com/new">Create Repo</a><br>3.Repository name 欄裡必須輸入成右方的格式： <code>&lt;username)&gt;.github.io</code></p><blockquote><p>EX: 我的 username 是 lingxuan0618，那 Repository name 欄裡就輸入 lingxuan0618.github.io</p></blockquote><h3 id="用-Git-讓本機連接至-Github"><a href="#用-Git-讓本機連接至-Github" class="headerlink" title="用 Git 讓本機連接至 Github"></a>用 Git 讓本機連接至 Github</h3><p>1.右鍵點擊桌面，點選 Git Bash Here，然後一個界面會彈出來（GitBash 的界面）。</p><p>2.在 GitBash 界面中輸入以下兩行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &lt;username&gt;        <span class="comment">#輸入你的 github username</span></span><br><span class="line">git config --global user.email xxx@xxx.com   <span class="comment">#輸入你註冊 github 時用的 email</span></span><br></pre></td></tr></table></figure><p>3.接著在C:\Users[username]的資料夾中，會看見一個.git.config 的檔案<br>打開它確認裡面的內容~</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[user]</span><br><span class="line">    email = xxxxx@xxxx.com   <span class="comment">#這裡顯示的是註冊 github 時用的 email</span></span><br><span class="line">    name = &lt;username&gt;        <span class="comment">#這裡顯示的是你的 github username</span></span><br></pre></td></tr></table></figure><p>4.在Git Bash介面上輸入下面的指令，然後一直按Enter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C xxxxx@xxxx.com <span class="comment">#輸入註冊 github 時用的 email</span></span><br></pre></td></tr></table></figure><p>5.接著在 C:\Users[username] 裡，會看鍵一個叫 .ssh 的資料夾<br>打開叫做 id_rsa.pub 的檔案，複製裡面的內容</p><p>6.Add New SSH key 到你的 github account裡面 ~<br>到 <a href="https://github.com/settings/ssh/new">github.com &gt; settings &gt; SSH and GPG keys</a> 這裡，貼上id_rsa.pub 檔案中的內容到 “Key” 框中。</p><p>7.回到 GitBash界面，輸入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>會在介面上看見 <code>Hi &lt;username&gt; ! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code><br>以後就可以利用 GitBash 介面連上 Blog 啦!!!</p><h3 id="安裝HEXO"><a href="#安裝HEXO" class="headerlink" title="安裝HEXO"></a>安裝HEXO</h3><p>建立一個資料夾，之後放置屬於你的Blog的東西</p><blockquote><p>EX: 我在桌面建立<code>C:\Users\User\Desktop\githubBlog</code><br>之後我就可以在桌面找到資料夾，右鍵打開GitBash~</p></blockquote><p>1.所以我在這個資料夾右鍵GitBash之後</p><p>2.在介面中依序輸入下列五個指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  <span class="comment"># 安裝 Hexo</span></span><br><span class="line">hexo init                <span class="comment"># 在目前所在的資料夾下載建立網站所需要的文件</span></span><br><span class="line">npm install              <span class="comment"># 安裝相關依賴包</span></span><br><span class="line">hexo g                   <span class="comment"># generate - 根據配置文件 &quot;__config.yml&quot; 渲染生成靜態頁面</span></span><br><span class="line">hexo s                   <span class="comment"># server   - starts a local server</span></span><br></pre></td></tr></table></figure><p>3.接著會在資料夾看到生成了許多文件!</p><p>4.在網址列輸入<a href="http://localhost:4000/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%80%8F%E8%A6%BD%E5%88%B0%E7%95%AB%E9%9D%A2%E5%95%A6">http://localhost:4000/，就可以瀏覽到畫面啦</a>~~<br><a href="https://hexojs.github.io/hexo-theme-landscape/">預設Theme</a></p><p>5.點進資料夾，會看見一個叫做 _config.yml 的檔案，打開後修改參數為下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://&lt;username&gt;.github.io</span> <span class="comment">#&lt;username&gt;填寫github username</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span> <span class="comment">#&lt;username&gt;填寫github username</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>6.把本地的資源 PUSH 到 GitHub 上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g <span class="comment"># generate static files</span></span><br><span class="line">hexo d <span class="comment"># deploy - 部署/上傳</span></span><br></pre></td></tr></table></figure><p>DO RE MI SO ~<br>接著就可以在網址列輸入<code> https://&lt;username&gt;.github.io</code><br>就可以瀏覽到專屬自己的Blog啦~~</p><hr><p>接著繼續看著參考的文章<br>繼續把Theme建立起來XDD</p><h2 id="更換Theme-gt-gt-gt-Butterfly"><a href="#更換Theme-gt-gt-gt-Butterfly" class="headerlink" title="更換Theme &gt;&gt;&gt; Butterfly"></a>更換Theme &gt;&gt;&gt; Butterfly</h2><h3 id="下載Butterfly的套件"><a href="#下載Butterfly的套件" class="headerlink" title="下載Butterfly的套件"></a>下載Butterfly的套件</h3><p>我都習慣打開GitBash之後，打上cd 空格，之後把資料夾拉進介面中，就會進入該目錄底下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\User\Desktop\githubBlog</span><br></pre></td></tr></table></figure><p>接著我們來下載套件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line">npm install cheerio@0.22.0 --save</span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>然後就會在 .\githubBlog\themes裡面多了一個叫做<code>Butterfly</code>的資料夾</p><h3 id="更改主題"><a href="#更改主題" class="headerlink" title="更改主題"></a>更改主題</h3><p>開啓.\githubBlog_config.yml，把主題改為 Butterfly</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">Butterfly</span></span><br></pre></td></tr></table></figure><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是 markdown 文件最上方以—分隔的區域，用來指定個別檔案的變數</p><ul><li>Page Front-matter - 頁面配置</li><li>Post Front-matter - 文章頁配置</li></ul><blockquote><p>非必要的可以自己選擇要不要加在檔案中</p></blockquote><p>可以參考<br><a href="https://ouoholly.github.io/post/build-github-hexo-butterfly-record/">【紀錄】由零開始，Github + Hexo (Butterfly theme) 搭建個人博客</a><br><a href="https://tzy1997.com/articles/hexo1606/">基於Hexo 從零開始搭建個人博客（六</a><br>這兩位大大的，寫得很詳細~<br>可以依據參數做設定</p><h3 id="常用的指令"><a href="#常用的指令" class="headerlink" title="常用的指令"></a>常用的指令</h3><p>我自己最常用的三個指令就是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment">#generate static files</span></span><br><span class="line">hexo s <span class="comment">#starts a local server(看localhost的網站XD)</span></span><br><span class="line">hexo g -d <span class="comment"># deploy - 部署/上傳</span></span><br></pre></td></tr></table></figure><p>就是一直在本機端run環境看看自己設定的有什麼效果XD</p><p>至於在部屬前可以輸入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#可以清理一些緩存</span></span><br></pre></td></tr></table></figure><p>建立文章的時候則是會使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;title&gt;</span><br></pre></td></tr></table></figure><hr><p>以上 是這次參考大家的文章 跟隨的步驟做一下紀錄<br>至於還有很多更改主題的部分<br>我覺得網路上有很多很多可以參考的<br>就不一一記錄下來了XDDD<br>我也還在慢慢創造出自己最喜歡的Blog<br>大家一起Fighting吧</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在HEXO上面-插入CodePen區塊</title>
      <link href="/posts/ca3fbe595422/"/>
      <url>/posts/ca3fbe595422/</url>
      
        <content type="html"><![CDATA[<p>今天想要在寫的文章中插入CodePen，讓觀看文章的人更能理解一些動畫的效果，於是爬了文找了個套件<br>並將這個過程紀錄一下XD</p><p><a href="https://github.com/maliMirkec/hexo-tag-codepen">hexo-tag-codepen Github</a></p><h1 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h1><ul><li><p>使用npm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-codepen --save</span><br></pre></td></tr></table></figure></li><li><p>使用yarn</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add hexo-codepen</span><br></pre></td></tr></table></figure></li></ul><p>在Markdorn語法中寫成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&#125;</span><br></pre></td></tr></table></figure><p>HTML會生成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">data-height</span>=<span class="string">&quot;265&quot;</span> <span class="attr">data-theme-id</span>=<span class="string">&quot;dark&quot;</span> <span class="attr">data-slug-hash</span>=<span class="string">&quot;bgjKKE&quot;</span> <span class="attr">data-default-tab</span>=<span class="string">&quot;css,result&quot;</span> <span class="attr">data-user</span>=<span class="string">&quot;CiTA&quot;</span> <span class="attr">data-embed-version</span>=<span class="string">&quot;2&quot;</span> <span class="attr">data-pen-title</span>=<span class="string">&quot;CSS sidebar toggle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;codepen&quot;</span>&gt;</span>See the Pen <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io/CiTA/pen/bgjKKE/&quot;</span>&gt;</span>CSS sidebar toggle<span class="tag">&lt;/<span class="name">a</span>&gt;</span> by Silvestar Bistrović (<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io/CiTA&quot;</span>&gt;</span>@CiTA<span class="tag">&lt;/<span class="name">a</span>&gt;</span>) on <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io&quot;</span>&gt;</span>CodePen<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="參數配置"><a href="#參數配置" class="headerlink" title="參數配置"></a>參數配置</h2><table><thead><tr><th>參數</th><th>值</th></tr></thead><tbody><tr><td>userId</td><td>CodePen的用戶名</td></tr><tr><td>slugHash</td><td>當前pen上url的hash值</td></tr><tr><td>theme</td><td>dark</td></tr><tr><td>defaultTab</td><td>css,result 默認顯示的tab</td></tr><tr><td>height</td><td>265</td></tr><tr><td>width</td><td>默認100%，應該根據主題做調整</td></tr></tbody></table><p>不過我照著文檔的做，高度及寬度顯示不出來，所以我調整為以下程式碼就成功顯示出來啦!</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codepen userId|anonymous|anon slugHash theme [defaultTab height width %&#125;</span><br></pre></td></tr></table></figure><iframe id="cp_embed_yLEYbPj" src="//codepen.io/lingxuan0618|anonymous|anon/embed/yLEYbPj?height=400&theme-id=dark&slug-hash=yLEYbPj&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><p>耶~這樣可以在文章盡情插入CodePen啦XDDDD</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初探JS動畫庫-GreenSock</title>
      <link href="/posts/68ce87e36928/"/>
      <url>/posts/68ce87e36928/</url>
      
        <content type="html"><![CDATA[<p>今天要來介紹JS一個強大的動畫庫-GreenSock<br><a href="https://greensock.com/">GreenSock文檔</a></p><h2 id="首先，我們要先了解什麼是”Tween”，我們可以看文檔中說的"><a href="#首先，我們要先了解什麼是”Tween”，我們可以看文檔中說的" class="headerlink" title="首先，我們要先了解什麼是”Tween”，我們可以看文檔中說的"></a>首先，我們要先了解什麼是”Tween”，我們可以看文檔中說的</h2><div class="note info no-icon simple"><p>A Tween is what does all the animation work - think of it like a high-performance property setter. You feed in targets (the objects you want to animate), a duration, and any properties you want it to animate and then when the Tween’s playhead moves to a new position, figures out what the property values should be at that point applies them accordingly.</p></div><p>我們可以從文檔這段話中，知道可以用Tween提供的屬性，去設置我們的動畫對象、持續的動畫時間，並由Tween去應用我們的動畫配置。</p><p>接下來 我們就一起來看看吧!</p><h2 id="創建Tween常用方法"><a href="#創建Tween常用方法" class="headerlink" title="創建Tween常用方法"></a>創建Tween常用方法</h2><ul><li>gasp.to()</li><li>gasp.from()</li><li>gasp.fromTo()</li></ul><h2 id="引入CDN"><a href="#引入CDN" class="headerlink" title="引入CDN"></a>引入CDN</h2><p>目前官網上最新的版本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.3/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="gasp-to"><a href="#gasp-to" class="headerlink" title="gasp.to()"></a>gasp.to()</h3><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p>想像成希望動畫接下來要做的事情，所以如下的代碼，就是希望box在一秒內可以旋轉27並且在X軸上移動200px</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.box&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">rotation</span>: <span class="number">27</span>, <span class="comment">//rotate</span></span><br><span class="line">  <span class="attr">x</span>: <span class="number">200</span>, <span class="comment">//translateX(200px) </span></span><br><span class="line">  <span class="attr">duration</span>: <span class="number">1</span>, <span class="comment">//transform 1s</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><iframe id="cp_embed_yLEYbPj" src="//codepen.io/lingxuan0618|anonymous|anon/embed/yLEYbPj?height=400&theme-id=dark&slug-hash=yLEYbPj&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="gasp-from"><a href="#gasp-from" class="headerlink" title="gasp.from()"></a>gasp.from()</h3><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p>跟gasp.to算是相反的動作，gasp.from是從設定的動作回到初始的設定，等於一秒內opacity 從0 ➜ 1,X軸位置從200px ➜ 0px</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">from</span>(<span class="string">&quot;.box&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0</span>, <span class="comment">//opacity0</span></span><br><span class="line">  <span class="attr">x</span>: <span class="number">200</span>, <span class="comment">//translateX(200px) </span></span><br><span class="line">  <span class="attr">duration</span>: <span class="number">1</span>, <span class="comment">//transform 1s</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><iframe id="cp_embed_YzvyVmp" src="//codepen.io/lingxuan0618|anonymous|anon/embed/YzvyVmp?height=400&theme-id=dark&slug-hash=YzvyVmp&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="gasp-fromTo"><a href="#gasp-fromTo" class="headerlink" title="gasp.fromTo()"></a>gasp.fromTo()</h3><div class="note blue icon-padding disabled"><i class="note-icon fas fa-hand-point-right"></i><p>gasp.fromTo允許設定開始與結束值，所以下方的代碼代表希望一秒內透明度從0 ➜ 0.8 </p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">fromTo</span>(<span class="string">&quot;.box&quot;</span>,</span><br><span class="line">   <span class="comment">// opacity of 0 to an opacity of 0.8</span></span><br><span class="line">   &#123;<span class="attr">autoAlpha</span>: <span class="number">0</span>&#125;,</span><br><span class="line">   &#123;<span class="attr">autoAlpha</span>: <span class="number">0.8</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">5</span>, <span class="comment">//transform 5s</span></span><br><span class="line">   &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><iframe id="cp_embed_jOKbwEe" src="//codepen.io/lingxuan0618|anonymous|anon/embed/jOKbwEe?height=400&theme-id=dark&slug-hash=jOKbwEe&default-tab=[defaultTab" scrolling="no" frameborder="no" height="400" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><p>這是GreenSock小小一部份的用法，還有很多很多，有興趣的話可以打開文檔一起研究一下XD</p>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> FrontEnd </tag>
            
            <tag> Animation </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
